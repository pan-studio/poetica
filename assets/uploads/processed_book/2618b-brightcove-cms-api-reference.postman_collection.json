{
	"info": {
		"_postman_id": "40e8fa91-8c27-4703-9983-74eb1f0b78d8",
		"name": "Brightcove CMS API Reference",
		"description": "Reference for the Brightcove CMS API, used to access and manage your media library. To test API requests, you can use our [API Testing Tools](/getting-started/concepts-testing-tools-brightcove-apis.html). For permissions needed for OAuth credentials, see [API Operations](/oauth/guides/api-operations-client-credentials-requests.html). For information on authenticating API requests, see the [OAuth Overview](/oauth/getting-started/overview-oauth-api-v4.html).\n\nFor additional in-depth guides to features of the API, see the **[general documentation](/cms/index.html)**.\n\n**Base URL**: https://cms.api.brightcove.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4986021"
	},
	"item": [
		{
			"name": "v1/accounts",
			"item": [
				{
					"name": "{account id}",
					"item": [
						{
							"name": "videos",
							"item": [
								{
									"name": "{video ids}",
									"item": [
										{
											"name": "Get Videos by ID/Reference ID",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids?include_variants=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos",
														":video_ids"
													],
													"query": [
														{
															"key": "include_variants",
															"value": "true",
															"description": "Whether to include the language variants in the response"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "video_ids",
															"value": "officia laborum",
															"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
														}
													]
												},
												"description": "Gets a video object - you can include **up to 10** video ids separated by commas."
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids?include_variants=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"query": [
																{
																	"key": "include_variants",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"clip_source_video_id\": \"pariatur officia exercitation consectetur\",\n  \"complete\": true,\n  \"created_at\": \"2015-09-17T16:08:37.108Z\",\n  \"created_by\": {\n    \"email\": \"in do\",\n    \"id\": \"pariatur irure culpa magna\",\n    \"type\": \"internal\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"id\": \"officia minim voluptate\",\n      \"metadata\": \"sed sit commodo\",\n      \"name\": \"sit dolor laborum \"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"DATA\",\n      \"id\": \"amet Duis\",\n      \"metadata\": \"tempor\",\n      \"name\": \"nulla laboris Lorem adipisicing commodo\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ullamco_f5\": \"Lorem minim ut\",\n    \"aliquip_\": \"labore in\"\n  },\n  \"delivery_type\": \"dynamic_origin\",\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"digital_master_id\": \"do officia\",\n  \"drm_disabled\": true,\n  \"duration\": 18160,\n  \"economics\": \"AD_SUPPORTED\",\n  \"folder_id\": \"560039e5e4b0e69e4b01cacd\",\n  \"forensic_watermarking\": \"ACTIVE\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": false,\n    \"restricted\": false\n  },\n  \"has_digital_master\": true,\n  \"id\": \"nostrud esse\",\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"sint pariatur esse sed\",\n    \"qui\"\n  ],\n  \"link\": {\n    \"text\": \"est ut labore\",\n    \"url\": \"ea veniam in\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"original_filename\": \"gull-boston.mov\",\n  \"playback_rights_id\": \"Ut voluptate nulla qui\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"nulla\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"est nostrud proident labore\",\n    \"starts_at\": \"consequat eu officia\"\n  },\n  \"sharing\": {\n    \"by_external_acct\": true,\n    \"by_id\": \"dolor laborum\",\n    \"by_reference\": true,\n    \"source_id\": \"labore\",\n    \"to_external_acct\": true\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"id\": \"aliqua\",\n      \"kind\": \"captions\",\n      \"label\": \"qui aute incididunt\",\n      \"mime_type\": \"veniam magna esse proident\",\n      \"src\": \"laboris occaecat\",\n      \"srclang\": \"Ut consectetur culpa non\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"id\": \"qui voluptate\",\n      \"kind\": \"captions\",\n      \"label\": \"commodo Excepteur\",\n      \"mime_type\": \"in eiusmod eu non officia\",\n      \"src\": \"mollit\",\n      \"srclang\": \"aliquip dolore proident laboris voluptate\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"officia exercitation\",\n      \"srclang\": \"irure nostrud ex\",\n      \"id\": \"ea culpa amet minim cupidatat\",\n      \"account_id\": \"exercitation ut pariatur\",\n      \"default\": false,\n      \"label\": \"in deserunt\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    },\n    {\n      \"src\": \"Lorem et\",\n      \"srclang\": \"laborum aliqua et sint\",\n      \"id\": \"irure quis dolore\",\n      \"account_id\": \"sunt laboris\",\n      \"default\": true,\n      \"label\": \"occaecat minim culpa eu nostrud\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    }\n  ],\n  \"updated_at\": \"Lorem\",\n  \"updated_by\": {\n    \"email\": \"sunt est in\",\n    \"id\": \"minim exercitation ea enim occaecat\",\n    \"type\": \"api_key\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids?include_variants=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"query": [
																{
																	"key": "include_variants",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids?include_variants=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"query": [
																{
																	"key": "include_variants",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids?include_variants=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"query": [
																{
																	"key": "include_variants",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids?include_variants=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"query": [
																{
																	"key": "include_variants",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Video",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos",
														":video_ids"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "video_ids",
															"value": "officia laborum",
															"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
														}
													]
												},
												"description": "'Deletes one or more videos - note that for this operation you can specify a comma-delimited list of video ids to delete. A maximum of 10 videos can be deleted with one request.'"
											},
											"response": [
												{
													"name": "NO_CONTENT",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "REFERENCES_EXIST: The video is in one or more manual playlists ",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "PRE_CONDITION_FAILED: usually this means the caller provided an ETag that didn't match the version of the video",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "Precondition Failed",
													"code": 412,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "INTERNAL_ERROR: Error in the backend ",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_ids",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_ids"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_ids",
																	"value": "officia laborum",
																	"description": "(Required) One or more video ids or one reference id. If reference ids, the syntax is `ref:my_ref_id`. Note that you may include multiple video ids, but only one reference id.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937,47584736360\n- https://cms.api.brightcove.com/v1/accounts/videos/ref:my_ref_id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{video id}",
									"item": [
										{
											"name": "variants",
											"item": [
												{
													"name": "{language}",
													"item": [
														{
															"name": "Get a Video Variant",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants",
																		":language"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "language",
																			"value": "officia laborum",
																			"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																		}
																	]
																},
																"description": "Gets the variant for the video metadata for the specified language"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Update a Video Variant",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants",
																		":language"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "language",
																			"value": "officia laborum",
																			"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																		}
																	]
																},
																"description": "Updates a language variant for a video metadata"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Delete a Video Variant",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants",
																		":language"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "language",
																			"value": "officia laborum",
																			"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																		}
																	]
																},
																"description": "Delete a language variant for a video metadata"
															},
															"response": [
																{
																	"name": "204 NO CONTENT",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants/:language",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"variants",
																				":language"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "language",
																					"value": "officia laborum",
																					"description": "(Required) The language for the variant in the language-country code format (examples: en-US, es-ES)"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Get All Video Variants",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"variants"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Gets the language variants for the video metadata"
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"language\": \"es-ES\",\n    \"name\": \"nisi\",\n    \"description\": \"in\",\n    \"long_description\": \"commodo ut aute incididunt ullamco\",\n    \"custom_fields\": {}\n  },\n  {\n    \"language\": \"es-ES\",\n    \"name\": \"in\",\n    \"description\": \"deserunt consequat\",\n    \"long_description\": \"consectetur est id ut exercitation\",\n    \"custom_fields\": {}\n  }\n]"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Create a Video Variant",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"variants"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Creates a language variant for a video metadata"
													},
													"response": [
														{
															"name": "201",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"language\": \"es-ES\",\n  \"name\": \"non laboris cillum proident labore\",\n  \"description\": \"non ullamco voluptate\",\n  \"long_description\": \"eiusmod incididunt repr\",\n  \"custom_fields\": {}\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/variants",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"variants"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "audio tracks",
											"item": [
												{
													"name": "{audio track id}",
													"item": [
														{
															"name": "Get Video Audio Track",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"audio_tracks",
																		":audio_track_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "audio_track_id",
																			"value": "officia laborum",
																			"description": "(Required) the id for the audio track, formed as `language_variant`"
																		}
																	]
																},
																"description": "Gets one audio track for a video by its ID Dynamic Delivery only "
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"duration\": 86053,\n  \"encoding_rates\": [\n    64000,\n    96000,\n    127000,\n    192000\n  ],\n  \"id\": \"en_alternate\",\n  \"is_default\": true,\n  \"language\": \"en-US\",\n  \"variant\": \"main\"\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Update Video Audio Track",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"is_default\": true,\n  \"language\": \"en-US\",\n  \"variant\": \"main\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"audio_tracks",
																		":audio_track_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "audio_track_id",
																			"value": "officia laborum",
																			"description": "(Required) the id for the audio track, formed as `language_variant`"
																		}
																	]
																},
																"description": "Updates audio track metadata for a video Dynamic Delivery only "
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"is_default\": true,\n  \"language\": \"en-US\",\n  \"variant\": \"main\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"duration\": 86053,\n  \"encoding_rates\": [\n    64000,\n    96000,\n    127000,\n    192000\n  ],\n  \"id\": \"en_alternate\",\n  \"is_default\": true,\n  \"language\": \"en-US\",\n  \"variant\": \"main\"\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"is_default\": true,\n  \"language\": \"en-US\",\n  \"variant\": \"main\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"is_default\": true,\n  \"language\": \"en-US\",\n  \"variant\": \"main\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"is_default\": true,\n  \"language\": \"en-US\",\n  \"variant\": \"main\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"is_default\": true,\n  \"language\": \"en-US\",\n  \"variant\": \"main\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Delete Video Audio Track",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"audio_tracks",
																		":audio_track_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "audio_track_id",
																			"value": "officia laborum",
																			"description": "(Required) the id for the audio track, formed as `language_variant`"
																		}
																	]
																},
																"description": "Deletes one audio track for a video by its ID Dynamic Delivery only "
															},
															"response": [
																{
																	"name": "Item was deleted",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks/:audio_track_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"audio_tracks",
																				":audio_track_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "audio_track_id",
																					"value": "officia laborum",
																					"description": "(Required) the id for the audio track, formed as `language_variant`"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Get Video Audio Tracks",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"audio_tracks"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Gets the audio tracks for a video Dynamic Delivery only "
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"audio_tracks"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"duration\": 86053,\n    \"encoding_rates\": [\n      64000,\n      96000,\n      127000,\n      192000\n    ],\n    \"id\": \"en_alternate\",\n    \"is_default\": true,\n    \"language\": \"en\",\n    \"variant\": \"main\"\n  }\n]"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"audio_tracks"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"audio_tracks"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"audio_tracks"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/audio_tracks",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"audio_tracks"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "digital master",
											"item": [
												{
													"name": "Get Digital Master Info",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"digital_master"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Gets the stored digital master for a video, if any "
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"created_at\": \"aliqua proident\",\n  \"duration\": 31431,\n  \"encoding_rate\": 23152000,\n  \"height\": 1080,\n  \"id\": \"a0a2e032-4de4-4495-a59e-a806d52989\",\n  \"size\": 90990884,\n  \"updated_at\": \"voluptate ullamco officia\",\n  \"width\": 1920\n}"
														},
														{
															"name": "The video does not have a digital master",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete Digital Master",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"digital_master"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Deletes the archived digital master for a video. Be sure to read Digital Master Delete API before using this operation to understand the implications."
													},
													"response": [
														{
															"name": "Item was deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/digital_master",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"digital_master"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "references",
											"item": [
												{
													"name": "Get Playlists for Video",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"references"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Gets an array of Manual (EXPLICIT) playlists that contain a video object for the account"
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"playlists\": [\n    \"mollit dolore sunt\",\n    \"incididunt proident\"\n  ]\n}"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Remove Video from all Playlists",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"references"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Removes the video from all EXPLICIT playlists for the account "
													},
													"response": [
														{
															"name": "Item was deleted",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/references",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "ingest jobs",
											"item": [
												{
													"name": "Get Status of Ingest Jobs",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/ingest_jobs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"ingest_jobs"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937"
																}
															]
														},
														"description": "Get the status of all ingest jobs associated with a video (including the original ingestion, replacing and retranscoding the video). NOTE: this operation only works for videos that were ingested using **Dynamic Delivery** profiles.\n\nPossible states of jobs are:\n  * `processing` processing is underway, but no playable renditions have been created yet\n  * `publishing` at least one playable rendition has been created and is being published\n  * `published` at least one rendition is available for playback\n  * `finished` processing is complete\n  * `failed` processing failed - if you cannot figure what went wrong, contact Support"
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/ingest_jobs",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"ingest_jobs"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"account_id\": \"ex enim dolore ullamco esse\",\n    \"error_code\": \"UnableToResolveHostError\",\n    \"error_message\": \"There was a problem resolving the host at https://some.site.comm/videos/mp4/IMG_0544.MOV. Please check that it is correct.\",\n    \"id\": \"879a3301-5c1a-4b1b-a368-58e200a6e64b\",\n    \"priority\": \"normal\",\n    \"started_at\": \"in dolore commodo\",\n    \"state\": \"failed\",\n    \"submitted_at\": \"pariatur\",\n    \"updated_at\": \"minim laborum dolor\",\n    \"video_id\": \"eiu\"\n  },\n  {\n    \"account_id\": \"ut consequat fugiat dolor\",\n    \"error_code\": \"UnableToResolveHostError\",\n    \"error_message\": \"There was a problem resolving the host at https://some.site.comm/videos/mp4/IMG_0544.MOV. Please check that it is correct.\",\n    \"id\": \"879a3301-5c1a-4b1b-a368-58e200a6e64b\",\n    \"priority\": \"normal\",\n    \"started_at\": \"enim voluptate\",\n    \"state\": \"failed\",\n    \"submitted_at\": \"minim ali\",\n    \"updated_at\": \"commodo\",\n    \"video_id\": \"ut eiusmod ad dolore\"\n  }\n]"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/ingest_jobs",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"ingest_jobs"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/ingest_jobs",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"ingest_jobs"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "INTERNAL_ERROR: Error in the backend ",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/ingest_jobs",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"ingest_jobs"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID.\n\nFor example:\n- https://cms.api.brightcove.com/v1/accounts/videos/9827342837937"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get Status of Ingest Job",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/ingest_jobs/:job_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"ingest_jobs",
																":job_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																},
																{
																	"key": "job_id",
																	"value": "officia laborum",
																	"description": "(Required) The Job ID for the ingest job (returned in the response to an ingest request)"
																}
															]
														},
														"description": "Get the status of an ingest job associated with a video (including the original ingestion, replacing and retranscoding the video). NOTE: this operation only works for videos that were ingested using **Dynamic Delivery** profiles.\n\n\nPossible states of jobs are:\n  * `processing` processing is underway, but no playable renditions have been created yet\n  * `publishing` at least one playable rendition has been created and is being published\n  * `published` at least one rendition is available for playback\n  * `finished` processing is complete\n  * `failed` processing failed - if you cannot figure what went wrong, contact Support"
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/ingest_jobs/:job_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"ingest_jobs",
																		":job_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "job_id",
																			"value": "officia laborum",
																			"description": "(Required) The Job ID for the ingest job (returned in the response to an ingest request)"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"account_id\": \"proident ullamco non velit\",\n  \"error_code\": \"UnableToResolveHostError\",\n  \"error_message\": \"There was a problem resolving the host at https://some.site.comm/videos/mp4/IMG_0544.MOV. Please check that it is correct.\",\n  \"id\": \"879a3301-5c1a-4b1b-a368-58e200a6e64b\",\n  \"priority\": \"normal\",\n  \"started_at\": \"nulla officia\",\n  \"state\": \"failed\",\n  \"submitted_at\": \"irure eu consequat nisi\",\n  \"updated_at\": \"do exercitation minim sit fugiat\",\n  \"video_id\": \"labore dolor fugiat\"\n}"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/ingest_jobs/:job_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"ingest_jobs",
																		":job_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "job_id",
																			"value": "officia laborum",
																			"description": "(Required) The Job ID for the ingest job (returned in the response to an ingest request)"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/ingest_jobs/:job_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"ingest_jobs",
																		":job_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "job_id",
																			"value": "officia laborum",
																			"description": "(Required) The Job ID for the ingest job (returned in the response to an ingest request)"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "INTERNAL_ERROR: Error in the backend ",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/ingest_jobs/:job_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"ingest_jobs",
																		":job_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "job_id",
																			"value": "officia laborum",
																			"description": "(Required) The Job ID for the ingest job (returned in the response to an ingest request)"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "shares",
											"item": [
												{
													"name": "{affiliate account id}",
													"item": [
														{
															"name": "Get Share",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares",
																		":affiliate_account_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "affiliate_account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																		}
																	]
																},
																"description": "Lists the existing shares for an account - this is a Master account operation - do this before sharing to insure that you are not re-sharing to an affiliate, which would overwrite any affiliate metadata changes"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"video_id\": \"id\",\n  \"affiliate_id\": \"mollit\",\n  \"affiliate_video_id\": \"eu in amet reprehe\",\n  \"shared_at\": \"in ex aliquip\",\n  \"status\": \"velit\",\n  \"updated_at\": \"deserunt pariatur\"\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: Resource not found ",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Unshare Video",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares",
																		":affiliate_account_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		},
																		{
																			"key": "affiliate_account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																		}
																	]
																},
																"description": "Un-shares a video with a specific affiliate - this is an Master account operation - do this before sharing to insure that you are not re-sharing to an affiliate, which would overwrite any affiliate metadata changes"
															},
															"response": [
																{
																	"name": "Item was deleted",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: Resource not found ",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"shares",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List Shares",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"shares"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Lists the existing shares for an account - this is a Master account operation - do this before sharing to insure that you are not re-sharing to an affiliate, which would overwrite any affiliate metadata changes"
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"video_id\": \"deserunt ea\",\n    \"affiliate_id\": \"amet voluptate\",\n    \"affiliate_video_id\": \"quis pariatur eu\",\n    \"shared_at\": \"sit in cupidatat esse\",\n    \"status\": \"ut eiusmod minim\",\n    \"updated_at\": \"eu culpa commodo\"\n  },\n  {\n    \"video_id\": \"sint veniam ut Duis\",\n    \"affiliate_id\": \"et ut\",\n    \"affiliate_video_id\": \"amet cillum dolor eu eiusmod\",\n    \"shared_at\": \"velit\",\n    \"status\": \"quis aliqua dolore nostrud laboris\",\n    \"updated_at\": \"consequat\"\n  }\n]"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: Resource not found ",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Share Video",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"id\": \"incididunt pariatur aliquip\"\n  },\n  {\n    \"id\": \"ad dolor laboris consectetur\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"shares"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Shares a video to one or more affiliates - this is an Master account operation - if the video has already been shared to an affiliate, this operation will re-share it and overwrite any affiliate metadata changes"
													},
													"response": [
														{
															"name": "Share request accepted",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"id\": \"consectetur occaecat\"\n  },\n  {\n    \"id\": \"nulla esse\"\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"video_id\": \"do non id\",\n    \"affiliate_id\": \"velit ut\",\n    \"affiliate_video_id\": \"aute Lorem reprehenderit anim\",\n    \"shared_at\": \"velit dolor et\",\n    \"status\": \"labore\",\n    \"updated_at\": \"esse dolor officia\"\n  },\n  {\n    \"video_id\": \"eu\",\n    \"affiliate_id\": \"aliqua\",\n    \"affiliate_video_id\": \"esse laboris culpa minim\",\n    \"shared_at\": \"reprehenderit anim\",\n    \"status\": \"nulla non adipisicing minim sed\",\n    \"updated_at\": \"adipisicing Duis\"\n  }\n]"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"id\": \"consectetur occaecat\"\n  },\n  {\n    \"id\": \"nulla esse\"\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"id\": \"consectetur occaecat\"\n  },\n  {\n    \"id\": \"nulla esse\"\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: Resource not found ",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"id\": \"consectetur occaecat\"\n  },\n  {\n    \"id\": \"nulla esse\"\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"id\": \"consectetur occaecat\"\n  },\n  {\n    \"id\": \"nulla esse\"\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"id\": \"consectetur occaecat\"\n  },\n  {\n    \"id\": \"nulla esse\"\n  }\n]",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/shares",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"shares"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "assets",
											"item": [
												{
													"name": "renditions",
													"item": [
														{
															"name": "{asset id}",
															"item": [
																{
																	"name": "Get Rendition",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Gets a specified rendition for a video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"labore ipsum Excepteur sit\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"in pariatur nisi irure\",\n  \"complete\": false,\n  \"controller_type\": \"magna veniam fugiat ipsum\",\n  \"current_filename\": \"non nulla Duis\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem consectetur ut ea\",\n    \"metadata_sharded_directory\": \"fugiat ullamco\",\n    \"packager_version\": \"laboris ut\",\n    \"state\": \"enim offic\"\n  },\n  \"encoding_rate\": 4637317,\n  \"frame_height\": 21118714,\n  \"frame_width\": 24121534,\n  \"id\": \"est sit aliqua quis\",\n  \"key_systems\": [\n    \"esse ad\",\n    \"eiusmod Ut\"\n  ],\n  \"name\": \"nostrud sunt ut Duis\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit sit\",\n  \"remote_stream_name\": \"eiusmod minim nulla esse\",\n  \"remote_url\": \"deserunt elit sint\",\n  \"size\": 79111773,\n  \"type\": \"proident laborum exercitation amet\",\n  \"updated_at\": \"fugiat minim ut in eiusmod\",\n  \"uploaded_at\": \"qui ut est\",\n  \"video_codec\": \"Ut minim in sint\",\n  \"video_container\": \"anim laboris non pariatur Duis\",\n  \"video_duration\": -23588859\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update Rendition",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Update the location for a remote rendition. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"labore ipsum Excepteur sit\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"in pariatur nisi irure\",\n  \"complete\": false,\n  \"controller_type\": \"magna veniam fugiat ipsum\",\n  \"current_filename\": \"non nulla Duis\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem consectetur ut ea\",\n    \"metadata_sharded_directory\": \"fugiat ullamco\",\n    \"packager_version\": \"laboris ut\",\n    \"state\": \"enim offic\"\n  },\n  \"encoding_rate\": 4637317,\n  \"frame_height\": 21118714,\n  \"frame_width\": 24121534,\n  \"id\": \"est sit aliqua quis\",\n  \"key_systems\": [\n    \"esse ad\",\n    \"eiusmod Ut\"\n  ],\n  \"name\": \"nostrud sunt ut Duis\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit sit\",\n  \"remote_stream_name\": \"eiusmod minim nulla esse\",\n  \"remote_url\": \"deserunt elit sint\",\n  \"size\": 79111773,\n  \"type\": \"proident laborum exercitation amet\",\n  \"updated_at\": \"fugiat minim ut in eiusmod\",\n  \"uploaded_at\": \"qui ut est\",\n  \"video_codec\": \"Ut minim in sint\",\n  \"video_container\": \"anim laboris non pariatur Duis\",\n  \"video_duration\": -23588859\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable\nMIXED_REMOTE_NOT_ALLOWED: Remote renditions may not be added to ingested videos",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Conflict",
																			"code": 409,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "VALIDATION_ERROR: remote_url",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Delete Rendition",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Deletes a remote rendition for the given video. Note: this operation is **only for remote renditions for remote asset videos** do *not* use it for renditions created by Video Cloud for ingested videos!"
																	},
																	"response": [
																		{
																			"name": "Item was deleted",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"renditions",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Get Rendition List (legacy ingest system only)",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"renditions"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Gets a list of renditions for a given video. Notes: 1) this endpoint is for renditions created using the legacy ingest profiles - for Dynamic Deliver renditions, use the `/accounts/{account_id}/videos/{video_id}/assets/dynamic_renditions` endpoint; 2) you can use /videos/ref:reference_id instead of /videos/video_id"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"account_id\": \"in cillum ut\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"nostrud aute ut\",\n    \"complete\": false,\n    \"controller_type\": \"dolor Excepteur ullamco ad laborum\",\n    \"current_filename\": \"qui dolor cupidatat consequat dolore\",\n    \"drm\": {\n      \"metadata_cdn_origin_id\": \"velit ut ex\",\n      \"metadata_sharded_directory\": \"incididunt tempor sint aliqua dolor\",\n      \"packager_version\": \"commodo dolore Duis\",\n      \"state\": \"dolore ut exercitation\"\n    },\n    \"encoding_rate\": 27347687,\n    \"frame_height\": 50160423,\n    \"frame_width\": 12018803,\n    \"id\": \"Duis veniam\",\n    \"key_systems\": [\n      \"aliqua\",\n      \"sint in incididunt id consectetur\"\n    ],\n    \"name\": \"enim deserunt dolor ad\",\n    \"progressive_download\": false,\n    \"reference_id\": \"cupidatat dolore do dolor\",\n    \"remote_stream_name\": \"ea\",\n    \"remote_url\": \"nostrud do\",\n    \"size\": 48708021,\n    \"type\": \"lab\",\n    \"updated_at\": \"exercitation pariatur\",\n    \"uploaded_at\": \"officia deserunt\",\n    \"video_codec\": \"voluptate nulla ut\",\n    \"video_container\": \"elit dolore\",\n    \"video_duration\": -54564524\n  },\n  {\n    \"account_id\": \"sunt veniam\",\n    \"audio_only\": true,\n    \"cdn_origin_id\": \"non enim amet\",\n    \"complete\": false,\n    \"controller_type\": \"sed Lorem in aliqua\",\n    \"current_filename\": \"quis exercitation minim do officia\",\n    \"drm\": {\n      \"metadata_cdn_origin_id\": \"labore d\",\n      \"metadata_sharded_directory\": \"velit pariatur\",\n      \"packager_version\": \"in e\",\n      \"state\": \"minim ips\"\n    },\n    \"encoding_rate\": -80643173,\n    \"frame_height\": 69645066,\n    \"frame_width\": -26324004,\n    \"id\": \"adipisicing ex id\",\n    \"key_systems\": [\n      \"dolore\",\n      \"id est\"\n    ],\n    \"name\": \"pariatur in culpa Excepteur nostrud\",\n    \"progressive_download\": true,\n    \"reference_id\": \"officia Lorem pariatur nisi\",\n    \"remote_stream_name\": \"proident\",\n    \"remote_url\": \"proident ipsum aliquip sed Excepteur\",\n    \"size\": 52721683,\n    \"type\": \"cillum aute dolore\",\n    \"updated_at\": \"mol\",\n    \"uploaded_at\": \"in ea\",\n    \"video_codec\": \"exercitation tempor\",\n    \"video_container\": \"cillum in esse\",\n    \"video_duration\": 48482488\n  }\n]"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Add Rendition",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"renditions"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Add a remote rendition to the given video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
															},
															"response": [
																{
																	"name": "Rendition asset created",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"account_id\": \"labore ipsum Excepteur sit\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"in pariatur nisi irure\",\n  \"complete\": false,\n  \"controller_type\": \"magna veniam fugiat ipsum\",\n  \"current_filename\": \"non nulla Duis\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem consectetur ut ea\",\n    \"metadata_sharded_directory\": \"fugiat ullamco\",\n    \"packager_version\": \"laboris ut\",\n    \"state\": \"enim offic\"\n  },\n  \"encoding_rate\": 4637317,\n  \"frame_height\": 21118714,\n  \"frame_width\": 24121534,\n  \"id\": \"est sit aliqua quis\",\n  \"key_systems\": [\n    \"esse ad\",\n    \"eiusmod Ut\"\n  ],\n  \"name\": \"nostrud sunt ut Duis\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit sit\",\n  \"remote_stream_name\": \"eiusmod minim nulla esse\",\n  \"remote_url\": \"deserunt elit sint\",\n  \"size\": 79111773,\n  \"type\": \"proident laborum exercitation amet\",\n  \"updated_at\": \"fugiat minim ut in eiusmod\",\n  \"uploaded_at\": \"qui ut est\",\n  \"video_codec\": \"Ut minim in sint\",\n  \"video_container\": \"anim laboris non pariatur Duis\",\n  \"video_duration\": -23588859\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable\nMIXED_REMOTE_NOT_ALLOWED: Remote renditions may not be added to ingested videos",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "VALIDATION_ERROR: remote_url",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"consequat in id\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"amet nostru\",\n  \"complete\": false,\n  \"controller_type\": \"ut minim id\",\n  \"current_filename\": \"proident aliqua magna\",\n  \"drm\": {\n    \"metadata_cdn_origin_id\": \"Lorem dolor elit laborum in\",\n    \"metadata_sharded_directory\": \"ex labore\",\n    \"packager_version\": \"eu tempor nulla Lorem\",\n    \"state\": \"minim eiusmod paria\"\n  },\n  \"encoding_rate\": -78514929,\n  \"frame_height\": -17941047,\n  \"frame_width\": 5162274,\n  \"key_systems\": [\n    \"labore eu\",\n    \"consectetur non est esse\"\n  ],\n  \"name\": \"sit ullamco magna aute\",\n  \"progressive_download\": false,\n  \"reference_id\": \"velit fug\",\n  \"remote_stream_name\": \"ullamco deserunt dolor ip\",\n  \"remote_url\": \"magna tempor cupidatat\",\n  \"size\": -94370014,\n  \"type\": \"fugiat amet\",\n  \"updated_at\": \"Duis in laboris in\",\n  \"uploaded_at\": \"adipisicing tempor nulla Ut ullamco\",\n  \"video_codec\": \"dolore sint irure amet tempor\",\n  \"video_container\": \"venia\",\n  \"video_duration\": -27326643\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/renditions",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"renditions"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "hls manifest",
													"item": [
														{
															"name": "{asset id}",
															"item": [
																{
																	"name": "Get HLS Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Gets an hls_manifest for a given video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update HLS Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Updates the location of a remote hls_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Conflict",
																			"code": 409,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "VALIDATION_ERROR: remote_url",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Delete HLS Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Deletes an hls_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "Item was deleted",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hls_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Get HLS Manifest List",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"hls_manifest"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Gets the `hls_manifest` for a given video. Notes: 1) you can use `/videos/ref:reference_id` instead of `/videos/video_id` 2) this method only returns a remote asset HLS manifest, not manifests for ingested videos"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  },\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  }\n]"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Add HLS Manifest",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"hls_manifest"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Adds the location of an hls_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
															},
															"response": [
																{
																	"name": "Manifest asset created",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "VALIDATION_ERROR: remote_url",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hls_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hls_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "dash manifests",
													"item": [
														{
															"name": "{asset id}",
															"item": [
																{
																	"name": "Get DASH Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Gets a dash_manifest for a given video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update DASH Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Updates the location of a remote dash_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Conflict",
																			"code": 409,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "VALIDATION_ERROR: remote_url",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Delete DASH Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Deletes an dash_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "Item was deleted",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"dash_manifests",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Get DASH Manifest List",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"dash_manifests"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Gets the dash_manifests for a given video. Notes: 1. you can have multiple dash manifests with profiles; you can have only one dash manifest without a profile, but one manifest without a profile can be combined with multiple manifests with profiles; 2. all manifests intended to be used with the CMS API should include a profile - only DASH manifests with profiles will be returned by the CMS API - only a single DASH manifest without a profile will be returned by the Media API 3. you can use /videos/ref:reference_id instead of /videos/video_id"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  },\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  }\n]"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Add DASH Manifest",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"dash_manifests"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Adds a location for a remote DASH manifest Notes: 1. you can have multiple dash manifests with profiles; you can have only one dash manifest without a profile, but one manifest without a profile can be combined with multiple manifests with profiles; 2. all manifests intended to be used with the CMS API should include a profile - only DASH manifests with profiles will be returned by the CMS API - only a single DASH manifest without a profile will be returned by the Media API 3. you can use /videos/ref:reference_id instead of /videos/video_id"
															},
															"response": [
																{
																	"name": "Manifest asset created",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "VALIDATION_ERROR: remote_url",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dash_manifests",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"dash_manifests"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "hds manifest",
													"item": [
														{
															"name": "{asset id}",
															"item": [
																{
																	"name": "Get HDS Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Gets the hds_manifest file for a given video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update HDS Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Updates the location of a remote hds_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Conflict",
																			"code": 409,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "VALIDATION_ERROR: remote_url",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Delete HDS Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Deletes an hds_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "Item was deleted",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"hds_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Get HDS Manifest List",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"hds_manifest"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Gets the hds_manifest file for a given video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  },\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  }\n]"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Add HDS Manifest",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"hds_manifest"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Adds the location of an hds_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
															},
															"response": [
																{
																	"name": "Manifest asset created",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "VALIDATION_ERROR: remote_url",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/hds_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"hds_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "ism manifest",
													"item": [
														{
															"name": "{asset id}",
															"item": [
																{
																	"name": "Get ISM Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Gets an ism_manifest for a given video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update ISM Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Updates the location of a remote ism_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Conflict",
																			"code": 409,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "VALIDATION_ERROR: remote_url",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Delete ISM Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Deletes an ism_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "Item was deleted",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ism_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Get ISM Manifest List",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"ism_manifest"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Gets the ism_manifest for a given video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  },\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  }\n]"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Add ISM Manifest",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"ism_manifest"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Adds the location of an ism_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
															},
															"response": [
																{
																	"name": "Manifest asset created",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "VALIDATION_ERROR: remote_url",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ism_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ism_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "ismc manifest",
													"item": [
														{
															"name": "{asset id}",
															"item": [
																{
																	"name": "Get ISMC Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Gets the ismc_manifest file for a given video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update ISMC Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Updates the location of a remote ismc_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Conflict",
																			"code": 409,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "VALIDATION_ERROR: remote_url",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Delete ISMC Manifest",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Deletes an ismc_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
																	},
																	"response": [
																		{
																			"name": "Item was deleted",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"ismc_manifest",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Get ISMC Manifest List",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"ismc_manifest"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Gets the ismc_manifest files for a given video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  },\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  }\n]"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Add ISMC Manifest",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"ismc_manifest"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Adds the location of an ismc_manifest file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
															},
															"response": [
																{
																	"name": "Manifest asset created",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "VALIDATION_ERROR: remote_url",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/ismc_manifest",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"ismc_manifest"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "poster",
													"item": [
														{
															"name": "{asset id}",
															"item": [
																{
																	"name": "Get Poster",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Gets a poster file for a given video. Note that you can only add one poster for a video. Note: you can use /videos/ref:reference_id instead of /videos/video_id. **This request works for accounts on the legacy ingest system only - not supported for Dynamic Delivery**"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update Poster",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Updates the location of a remote poster file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`. **This request works for accounts on the legacy ingest system only - not supported for Dynamic Delivery**"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Conflict",
																			"code": 409,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "VALIDATION_ERROR: remote_url",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"poster",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Get Poster List",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"poster"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Gets the poster file for a given video. Note that you can only add one poster for a video. Note: you can use /videos/ref:reference_id instead of /videos/video_id. **This request works for accounts on the legacy ingest system only - not supported for Dynamic Delivery**"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"account_id\": \"1752604059001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"5602\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n    \"frame_height\": 720,\n    \"frame_width\": 1280,\n    \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 41742,\n    \"type\": \"VIDEO_STILL\",\n    \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n    \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n  },\n  {\n    \"account_id\": \"1752604059001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"5602\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n    \"frame_height\": 720,\n    \"frame_width\": 1280,\n    \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 41742,\n    \"type\": \"VIDEO_STILL\",\n    \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n    \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n  }\n]"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Add Poster",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"poster"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Adds a poster file for a remote asset. Ingested assets must be added via the Dynamic Ingest API. Note: you can use /videos/ref:reference_id instead of /videos/video_id. **This request works for accounts on the legacy ingest system only - not supported for Dynamic Delivery**"
															},
															"response": [
																{
																	"name": "Poster asset created",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "VALIDATION_ERROR: remote_url",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/poster",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"poster"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "thumbnail",
													"item": [
														{
															"name": "{asset id}",
															"item": [
																{
																	"name": "Get Thumbnail",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Gets a thumbnail file for a given video. Note that you can only add one thumbnail for a video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`. **This request works for accounts on the legacy ingest system only - not supported for Dynamic Delivery**"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update Thumbnail",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Updates the location of a remote thumbnail file for a remote asset. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`. **This request works for accounts on the legacy ingest system only - not supported for Dynamic Delivery**"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Conflict",
																			"code": 409,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "VALIDATION_ERROR: remote_url",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"thumbnail",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Get Thumbnail List",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"thumbnail"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Gets the thumbnail for a given video. Note that you can only add one thumbnail for a video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`. **This request works for accounts on the legacy ingest system only - not supported for Dynamic Delivery**"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"account_id\": \"1752604059001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"5602\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n    \"frame_height\": 720,\n    \"frame_width\": 1280,\n    \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 41742,\n    \"type\": \"VIDEO_STILL\",\n    \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n    \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n  },\n  {\n    \"account_id\": \"1752604059001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"5602\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n    \"frame_height\": 720,\n    \"frame_width\": 1280,\n    \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 41742,\n    \"type\": \"VIDEO_STILL\",\n    \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n    \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n  }\n]"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Add Thumbnail",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"thumbnail"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Adds a thumbnail file for a remote asset. Ingested assets must be added via the Dynamic Ingest API. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`. **This request works for accounts on the legacy ingest system only - not supported for Dynamic Delivery**"
															},
															"response": [
																{
																	"name": "Thumbnail asset created",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "VALIDATION_ERROR: remote_url",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1752604059001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"5602\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"1752604059001_5510492050001_5510487311001-vs.jpg\",\n  \"frame_height\": 720,\n  \"frame_width\": 1280,\n  \"key_systems\": [],\n  \"name\": \"Lightning-over-mosque-Utrecht.m4v Video Still\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 41742,\n  \"type\": \"VIDEO_STILL\",\n  \"updated_at\": \"2017-07-26T07:02:42.077Z\",\n  \"uploaded_at\": \"2017-07-17T17:46:17.295Z\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/thumbnail",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"thumbnail"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "caption",
													"item": [
														{
															"name": "{asset id}",
															"item": [
																{
																	"name": "Get Caption",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Gets a caption file for a given video (DFXP captions for the Smart Player). Note: 1) the caption endpoint is ONLY for working with DFXP captions used in the legacy Smart Player - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Update Caption",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Updates the location of a remote caption file for a remote asset (DFXP captions for the Smart Player). Note: 1) the caption endpoint is ONLY for working with DFXP captions used in the legacy Smart Player - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id"
																	},
																	"response": [
																		{
																			"name": "200",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Conflict",
																			"code": 409,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "VALIDATION_ERROR: remote_url",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																			"code": 422,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																},
																{
																	"name": "Delete Caption",
																	"request": {
																		"auth": {
																			"type": "oauth2",
																			"oauth2": [
																				{
																					"key": "scope",
																					"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																					"type": "string"
																				},
																				{
																					"key": "accessTokenUrl",
																					"value": "https://oauth.brightcove.com/v4/access_token",
																					"type": "string"
																				},
																				{
																					"key": "grant_type",
																					"value": "client_credentials",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption",
																				":asset_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				},
																				{
																					"key": "asset_id",
																					"value": "officia laborum",
																					"description": "(Required) The asset ID"
																				}
																			]
																		},
																		"description": "Deletes a caption file for a remote asset (DFXP captions for the Smart Player). Note: 1) the caption endpoint is ONLY for working with DFXP captions used in the legacy Smart Player - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id"
																	},
																	"response": [
																		{
																			"name": "Item was deleted",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Method Not Allowed",
																			"code": 405,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Too Many Requests",
																			"code": 429,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"description": "Added as a part of security scheme: oauth2",
																						"key": "Authorization",
																						"value": "<token>"
																					},
																					{
																						"description": "(Required) Content-Type: application/json",
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																						"key": "Authorization",
																						"value": "officia laborum"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption/:asset_id",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v1",
																						"accounts",
																						":account_id",
																						"videos",
																						":video_id",
																						"assets",
																						"caption",
																						":asset_id"
																					],
																					"variable": [
																						{
																							"key": "account_id",
																							"value": "officia laborum",
																							"description": "(Required) Video Cloud account ID."
																						},
																						{
																							"key": "video_id",
																							"value": "officia laborum",
																							"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																						},
																						{
																							"key": "asset_id",
																							"value": "officia laborum",
																							"description": "(Required) The asset ID"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		}
																	]
																}
															]
														},
														{
															"name": "Get Caption List",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"caption"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Gets the caption file for a given video (DFXP captions for the Smart Player). Note: 1) the caption endpoint is **ONLY for working with DFXP captions used in the legacy Smart Player** - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id"
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  },\n  {\n    \"account_id\": \"57838016001\",\n    \"audio_only\": false,\n    \"cdn_origin_id\": \"8801\",\n    \"complete\": true,\n    \"controller_type\": \"DEFAULT\",\n    \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n    \"name\": \"greatblueheron.mp4\",\n    \"progressive_download\": false,\n    \"reference_id\": \"\",\n    \"remote_stream_name\": \"\",\n    \"remote_url\": \"\",\n    \"size\": 0,\n    \"type\": \"HLS_MANIFEST\",\n    \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n    \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n    \"video_duration\": 0\n  }\n]"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Add Caption",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"caption"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Adds a caption file for a remote asset (DFXP captions for the Smart Player). Note: 1) the caption endpoint is **ONLY for working with DFXP captions used in the legacy Smart Player** - WebVTT captions (text_tracks) for the new Brightcove Player are managed using the Update Video operation; 2) you can use /videos/ref:reference_id instead of /videos/video_id"
															},
															"response": [
																{
																	"name": "Caption asset created",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Conflict",
																	"code": 409,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "VALIDATION_ERROR: remote_url",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
																	"code": 422,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"57838016001\",\n  \"audio_only\": false,\n  \"cdn_origin_id\": \"8801\",\n  \"complete\": true,\n  \"controller_type\": \"DEFAULT\",\n  \"current_filename\": \"57838016001_5819043232001_5819044609001.m3u8\",\n  \"key_systems\": [],\n  \"name\": \"greatblueheron.mp4\",\n  \"progressive_download\": false,\n  \"reference_id\": \"\",\n  \"remote_stream_name\": \"\",\n  \"remote_url\": \"\",\n  \"size\": 0,\n  \"type\": \"HLS_MANIFEST\",\n  \"updated_at\": \"2018-08-07T14:06:52.489Z\",\n  \"uploaded_at\": \"2018-08-07T14:05:57.105Z\",\n  \"video_duration\": 0\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/caption",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"videos",
																				":video_id",
																				"assets",
																				"caption"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Get Assets",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"assets"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Gets assets for a given video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"account_id\": \"fugiat aute mollit\",\n    \"audio_only\": true,\n    \"cdn_origin_id\": \"aliqua esse et\",\n    \"complete\": true,\n    \"controller_type\": \"nisi quis cup\",\n    \"current_filename\": \"consectetur eu dolor\",\n    \"drm\": {\n      \"metadata_cdn_origin_id\": \"sunt exercitation dolore\",\n      \"metadata_sharded_directory\": \"adipisicing nis\",\n      \"packager_version\": \"est ea cupidatat id\",\n      \"state\": \"ad dolor of\"\n    },\n    \"encoding_rate\": 30929665,\n    \"frame_height\": -63293459,\n    \"frame_width\": 83987106,\n    \"id\": \"ut sed aute\",\n    \"key_systems\": [\n      \"occa\",\n      \"sunt dolore Lorem ad\"\n    ],\n    \"name\": \"ullamco labo\",\n    \"progressive_download\": false,\n    \"reference_id\": \"laboris ex magna amet\",\n    \"remote_stream_name\": \"est fugiat id ullamco\",\n    \"remote_url\": \"irure\",\n    \"size\": 76270397,\n    \"type\": \"velit adipisicing irure\",\n    \"updated_at\": \"i\",\n    \"uploaded_at\": \"aliqua\",\n    \"video_codec\": \"sint non Lorem proident\",\n    \"video_container\": \"dolor in\",\n    \"video_duration\": -71638784\n  },\n  {\n    \"account_id\": \"enim tempor\",\n    \"audio_only\": true,\n    \"cdn_origin_id\": \"elit exercitation\",\n    \"complete\": false,\n    \"controller_type\": \"enim cillum\",\n    \"current_filename\": \"consequat deserunt\",\n    \"drm\": {\n      \"metadata_cdn_origin_id\": \"irure exercitation\",\n      \"metadata_sharded_directory\": \"in aliquip enim in\",\n      \"packager_version\": \"cupidatat dolor sunt\",\n      \"state\": \"eu ex\"\n    },\n    \"encoding_rate\": -74539031,\n    \"frame_height\": 16224868,\n    \"frame_width\": 3553733,\n    \"id\": \"laborum aute Ut\",\n    \"key_systems\": [\n      \"reprehenderit Ut\",\n      \"reprehenderit esse fugiat aliqua\"\n    ],\n    \"name\": \"dolore ullamco sed\",\n    \"progressive_download\": true,\n    \"reference_id\": \"Duis sit nostrud aute\",\n    \"remote_stream_name\": \"qui aliquip aute est\",\n    \"remote_url\": \"non reprehenderit proident tempor\",\n    \"size\": -46166440,\n    \"type\": \"elit anim fugiat et\",\n    \"updated_at\": \"voluptate ut\",\n    \"uploaded_at\": \"est\",\n    \"video_codec\": \"ut reprehenderit\",\n    \"video_container\": \"qui dolore veniam id minim\",\n    \"video_duration\": -12784323\n  }\n]"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get Dynamic Renditions (renditions for Dynamic Delivery videos)",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dynamic_renditions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"assets",
																"dynamic_renditions"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														},
														"description": "Gets a list of dynamic renditions for a Dynamic Delivery video. Note: you can use `/videos/ref:reference_id` instead of `/videos/video_id`"
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dynamic_renditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"dynamic_renditions"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"audio_configuration\": \"minim pariatur aliquip\",\n    \"duration\": -40614947,\n    \"encoding_rate\": -56957517,\n    \"frame_height\": -34926892,\n    \"frame_width\": -11109035,\n    \"media_type\": \"video\",\n    \"rendition_id\": \"nostrud\",\n    \"size\": -45333091,\n    \"updated_at\": \"nulla magna consectetur Lorem\",\n    \"uploaded_at\": \"Excepteur aliqua ut\",\n    \"variant\": \"baseline\"\n  },\n  {\n    \"audio_configuration\": \"in ea laboris\",\n    \"duration\": -10125635,\n    \"encoding_rate\": 5145840,\n    \"frame_height\": 3244810,\n    \"frame_width\": -273369,\n    \"media_type\": \"audio\",\n    \"rendition_id\": \"anim ea exercitation\",\n    \"size\": -40523868,\n    \"updated_at\": \"occaecat eu adipisicing pariatur\",\n    \"uploaded_at\": \"sint aliquip eu\",\n    \"variant\": \"main\"\n  }\n]"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dynamic_renditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"dynamic_renditions"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dynamic_renditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"dynamic_renditions"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dynamic_renditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"dynamic_renditions"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dynamic_renditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"dynamic_renditions"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dynamic_renditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"dynamic_renditions"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/assets/dynamic_renditions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"videos",
																		":video_id",
																		"assets",
																		"dynamic_renditions"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Update Video",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos",
														":video_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "video_id",
															"value": "officia laborum",
															"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
														}
													]
												},
												"description": "Update video metadata - note that this API does not ingest any media files - use the Dynamic Ingest API for ingestion. Also note that replacing WebVTT text tracks is a two-step operation - see Add WebVTT Captions for details."
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"clip_source_video_id\": \"pariatur officia exercitation consectetur\",\n  \"complete\": true,\n  \"created_at\": \"2015-09-17T16:08:37.108Z\",\n  \"created_by\": {\n    \"email\": \"in do\",\n    \"id\": \"pariatur irure culpa magna\",\n    \"type\": \"internal\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"id\": \"officia minim voluptate\",\n      \"metadata\": \"sed sit commodo\",\n      \"name\": \"sit dolor laborum \"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"DATA\",\n      \"id\": \"amet Duis\",\n      \"metadata\": \"tempor\",\n      \"name\": \"nulla laboris Lorem adipisicing commodo\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ullamco_f5\": \"Lorem minim ut\",\n    \"aliquip_\": \"labore in\"\n  },\n  \"delivery_type\": \"dynamic_origin\",\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"digital_master_id\": \"do officia\",\n  \"drm_disabled\": true,\n  \"duration\": 18160,\n  \"economics\": \"AD_SUPPORTED\",\n  \"folder_id\": \"560039e5e4b0e69e4b01cacd\",\n  \"forensic_watermarking\": \"ACTIVE\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": false,\n    \"restricted\": false\n  },\n  \"has_digital_master\": true,\n  \"id\": \"nostrud esse\",\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"sint pariatur esse sed\",\n    \"qui\"\n  ],\n  \"link\": {\n    \"text\": \"est ut labore\",\n    \"url\": \"ea veniam in\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"original_filename\": \"gull-boston.mov\",\n  \"playback_rights_id\": \"Ut voluptate nulla qui\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"nulla\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"est nostrud proident labore\",\n    \"starts_at\": \"consequat eu officia\"\n  },\n  \"sharing\": {\n    \"by_external_acct\": true,\n    \"by_id\": \"dolor laborum\",\n    \"by_reference\": true,\n    \"source_id\": \"labore\",\n    \"to_external_acct\": true\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"id\": \"aliqua\",\n      \"kind\": \"captions\",\n      \"label\": \"qui aute incididunt\",\n      \"mime_type\": \"veniam magna esse proident\",\n      \"src\": \"laboris occaecat\",\n      \"srclang\": \"Ut consectetur culpa non\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"id\": \"qui voluptate\",\n      \"kind\": \"captions\",\n      \"label\": \"commodo Excepteur\",\n      \"mime_type\": \"in eiusmod eu non officia\",\n      \"src\": \"mollit\",\n      \"srclang\": \"aliquip dolore proident laboris voluptate\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"officia exercitation\",\n      \"srclang\": \"irure nostrud ex\",\n      \"id\": \"ea culpa amet minim cupidatat\",\n      \"account_id\": \"exercitation ut pariatur\",\n      \"default\": false,\n      \"label\": \"in deserunt\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    },\n    {\n      \"src\": \"Lorem et\",\n      \"srclang\": \"laborum aliqua et sint\",\n      \"id\": \"irure quis dolore\",\n      \"account_id\": \"sunt laboris\",\n      \"default\": true,\n      \"label\": \"occaecat minim culpa eu nostrud\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    }\n  ],\n  \"updated_at\": \"Lorem\",\n  \"updated_by\": {\n    \"email\": \"sunt est in\",\n    \"id\": \"minim exercitation ea enim occaecat\",\n    \"type\": \"api_key\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "202 is returned as a success response in cases where text tracks are updated, because that is performed by a separate system.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "AD_CONFIG_INACTIVE: Ad configuration specified in an SSAI request is inactive\nAD_CONFIG_NOT_FOUND: Ad configuration specified in an SSAI request was not found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "BAD_VALUE: Spelling error or other use of non-existent field ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "REFERENCE_ID_IN_USE: You attempted to create a video with a reference id that is already in use, or add a reference id to a video which is already used by another video",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "ILLEGAL_FIELD: Spelling error or other use of non-existent field\nVALIDATION_ERROR: the JSON data was not valid - error messages vary depending on the problem",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: an unknown internal error occurred - this might be a temporary system issue, but if the problem persists, it is likely an uncaught error in the request - contact Support",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TIMEOUT: Server likely too busy - try again later ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"created_by\": {\n    \"email\": \"fugiat ut\",\n    \"id\": \"laboris aliqua elit tempor Excepteur\",\n    \"type\": \"user\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"occaecat sint aliqua nostrud\",\n      \"name\": \"cupidatat fugiat ex cillum\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"fugiat commodo dolore\",\n      \"name\": \"proident Ut\"\n    }\n  ],\n  \"custom_fields\": {\n    \"ut63\": \"magna cillum sint et reprehenderit\",\n    \"elit46\": \"dolore laboris\",\n    \"officia080\": \"ad voluptate deserunt consectetur\"\n  },\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": false\n  },\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"in aute ut\",\n    \"mollit magna cillum Excepteur sunt\"\n  ],\n  \"link\": {\n    \"text\": \"laboris dolor in\",\n    \"url\": \"non pariatur\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"playback_rights_id\": \"ut non\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"aliquip cupidatat in Lorem\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"sed mollit consectetur\",\n    \"starts_at\": \"do consequat\"\n  },\n  \"sharing\": {},\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"do\",\n      \"mime_type\": \"tempor commodo\",\n      \"src\": \"Lorem aliquip mollit\",\n      \"srclang\": \"ut dolor ea\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"kind\": \"captions\",\n      \"label\": \"anim\",\n      \"mime_type\": \"amet aute commodo ullamco\",\n      \"src\": \"nisi esse\",\n      \"srclang\": \"commodo in est dolor\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"sunt veniam proident\",\n      \"srclang\": \"aliqua ut\",\n      \"label\": \"aliquip sed fugiat\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    },\n    {\n      \"src\": \"sint proident aute\",\n      \"srclang\": \"fugiat aute\",\n      \"label\": \"ipsum mollit dolor pariatur\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    }\n  ],\n  \"updated_by\": {\n    \"email\": \"Ut occaecat ex mollit\",\n    \"id\": \"in ad cupidatat\",\n    \"type\": \"user\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get Video Sources",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/sources",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos",
														":video_id",
														"sources"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "video_id",
															"value": "officia laborum",
															"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
														}
													]
												},
												"description": "Gets an array of sources (renditions) for a video"
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/sources",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"sources"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"app_name\": \"voluptate ad aliquip\",\n  \"asset_id\": \"eiusmod sed amet qui\",\n  \"codec\": \"in\",\n  \"container\": \"aliqua dolore labore\",\n  \"duration\": -80215899,\n  \"encoding_rate\": -94160007,\n  \"height\": 58883044,\n  \"remote\": true,\n  \"size\": -93083643,\n  \"src\": \"dolore\",\n  \"stream_name\": \"sed laborum eiusmod ut\",\n  \"type\": \"et voluptate\",\n  \"uploaded_at\": \"adipisicing ut\",\n  \"width\": 46664525\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/sources",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"sources"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/sources",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"sources"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/sources",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"sources"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/sources",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"sources"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get Video Images",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/images",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos",
														":video_id",
														"images"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "video_id",
															"value": "officia laborum",
															"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
														}
													]
												},
												"description": "Gets the images for a video "
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"images"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"thumbnail\": {\n    \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n    \"sources\": [\n      {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n        \"height\": 90,\n        \"width\": 160\n      }\n    ]\n  },\n  \"poster\": {\n    \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n    \"sources\": [\n      {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n        \"height\": 720,\n        \"width\": 1280\n      }\n    ]\n  },\n  \"portrait.es\": {\n    \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n    \"sources\": [\n      {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n        \"height\": 1200,\n        \"width\": 800\n      }\n    ]\n  },\n  \"thumbnail.en\": {\n    \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n    \"sources\": [\n      {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n        \"height\": 108,\n        \"width\": 292\n      }\n    ]\n  },\n  \"poster.en\": {\n    \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n    \"sources\": [\n      {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n        \"height\": 1080,\n        \"width\": 1920\n      }\n    ]\n  },\n  \"square.de\": {\n    \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n    \"sources\": [\n      {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n        \"height\": 570,\n        \"width\": 570\n      }\n    ]\n  },\n  \"ultra-wide.hi\": {\n    \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n    \"sources\": [\n      {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n        \"height\": 1646,\n        \"width\": 3840\n      }\n    ]\n  },\n  \"wide.fr\": {\n    \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n    \"sources\": [\n      {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n        \"height\": 1440,\n        \"width\": 2560\n      }\n    ]\n  }\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"images"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"images"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"images"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/images",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"images"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete video image",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/image_sources/:label",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos",
														":video_id",
														"image_sources",
														":label"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "video_id",
															"value": "officia laborum",
															"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
														},
														{
															"key": "label",
															"value": "square",
															"description": "(Required) Image type"
														}
													]
												},
												"description": "Delete video image source by label. The label can be one of `poster`, `thumbnail`, `wide`, `ultra-wide`, `portrait`, `square`."
											},
											"response": [
												{
													"name": "NO CONTENT: image source was deleted successfully.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/image_sources/:label",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"image_sources",
																":label"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																},
																{
																	"key": "label",
																	"value": "square",
																	"description": "(Required) Image type"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "AD_CONFIG_INACTIVE: Ad configuration specified in an SSAI request is inactive\nAD_CONFIG_NOT_FOUND: Ad configuration specified in an SSAI request was not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/image_sources/:label",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"image_sources",
																":label"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																},
																{
																	"key": "label",
																	"value": "square",
																	"description": "(Required) Image type"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/image_sources/:label",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"image_sources",
																":label"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																},
																{
																	"key": "label",
																	"value": "square",
																	"description": "(Required) Image type"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/image_sources/:label",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"image_sources",
																":label"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																},
																{
																	"key": "label",
																	"value": "square",
																	"description": "(Required) Image type"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/image_sources/:label",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"image_sources",
																":label"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																},
																{
																	"key": "label",
																	"value": "square",
																	"description": "(Required) Image type"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/image_sources/:label",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"image_sources",
																":label"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																},
																{
																	"key": "label",
																	"value": "square",
																	"description": "(Required) Image type"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: an unknown internal error occurred - this might be a temporary system issue, but if the problem persists, it is likely an uncaught error in the request - contact Support",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/image_sources/:label",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"image_sources",
																":label"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																},
																{
																	"key": "label",
																	"value": "square",
																	"description": "(Required) Image type"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TIMEOUT: Server likely too busy - try again later ",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/videos/:video_id/image_sources/:label",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"videos",
																":video_id",
																"image_sources",
																":label"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "video_id",
																	"value": "officia laborum",
																	"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																},
																{
																	"key": "label",
																	"value": "square",
																	"description": "(Required) Image type"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Videos",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/videos?limit=20&offset=20&sort=created_at&query=+name:Birds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"videos"
											],
											"query": [
												{
													"key": "limit",
													"value": "20",
													"description": "Number of items to return - see [Paging Search Results](/cms/searching/using-cms-api-page-search-results.html) for more information"
												},
												{
													"key": "offset",
													"value": "20",
													"description": "Number of items to skip - see [Paging Search Results](/cms/searching/using-cms-api-page-search-results.html) for more information"
												},
												{
													"key": "sort",
													"value": "created_at",
													"description": "Field to sort results by - if absent and there is a search string, results are sorted by relevance or if there is no search string, results are sorted by `-updated_at`. \nNotes: \n  - to sort in descending order, preface the field name with a minus (`-`) sign\n  - this parameter can be used to sort results both for a get videos request and for a get videos in folder request"
												},
												{
													"key": "query",
													"value": "+name:Birds",
													"description": "Search string - see [search guide](/cms/searching/cms-and-playback-apis-video-search-v2.html) for details"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Gets a page of video objects "
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos?limit=20&offset=20&sort=created_at&query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "created_at"
														},
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n    \"clip_source_video_id\": \"labore incididunt qui dolor\",\n    \"complete\": true,\n    \"created_at\": \"2015-09-17T16:08:37.108Z\",\n    \"created_by\": {\n      \"email\": \"voluptate cillum ipsum\",\n      \"id\": \"esse officia\",\n      \"type\": \"internal\"\n    },\n    \"cue_points\": [\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"custom_fields\": {\n      \"do_02\": \"eiusmod proident adipisicing qui eu\"\n    },\n    \"delivery_type\": \"dynamic_origin\",\n    \"description\": \"Herring gull on a wharf in Boston\",\n    \"digital_master_id\": \"consequat nisi amet\",\n    \"drm_disabled\": true,\n    \"duration\": 18160,\n    \"economics\": \"AD_SUPPORTED\",\n    \"folder_id\": \"560039e5e4b0e69e4b01cacd\",\n    \"forensic_watermarking\": \"ACTIVE\",\n    \"geo\": {\n      \"countries\": [\n        \"us\",\n        \"ca\",\n        \"fr\"\n      ],\n      \"exclude_countries\": true,\n      \"restricted\": true\n    },\n    \"has_digital_master\": true,\n    \"id\": \"sit adipisicing\",\n    \"images\": {\n      \"thumbnail\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n            \"height\": 90,\n            \"width\": 160\n          }\n        ]\n      },\n      \"poster\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n            \"height\": 720,\n            \"width\": 1280\n          }\n        ]\n      },\n      \"portrait.es\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n            \"height\": 1200,\n            \"width\": 800\n          }\n        ]\n      },\n      \"thumbnail.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n            \"height\": 108,\n            \"width\": 292\n          }\n        ]\n      },\n      \"poster.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n            \"height\": 1080,\n            \"width\": 1920\n          }\n        ]\n      },\n      \"square.de\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n            \"height\": 570,\n            \"width\": 570\n          }\n        ]\n      },\n      \"ultra-wide.hi\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n            \"height\": 1646,\n            \"width\": 3840\n          }\n        ]\n      },\n      \"wide.fr\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n            \"height\": 1440,\n            \"width\": 2560\n          }\n        ]\n      }\n    },\n    \"labels\": [\n      \"amet\",\n      \"adipisicing non\"\n    ],\n    \"link\": {\n      \"text\": \"officia incididunt minim mollit\",\n      \"url\": \"officia irure\"\n    },\n    \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n    \"name\": \"Laughing Gull\",\n    \"offline_enabled\": true,\n    \"original_filename\": \"gull-boston.mov\",\n    \"playback_rights_id\": \"ex est\",\n    \"projection\": \"equirectangular\",\n    \"published_at\": \"quis commodo cillum\",\n    \"reference_id\": \"laughing_gull_2019_04_25\",\n    \"schedule\": {\n      \"ends_at\": \"deserunt est minim aliqua\",\n      \"starts_at\": \"eiusmod\"\n    },\n    \"sharing\": {\n      \"by_external_acct\": true,\n      \"by_id\": \"con\",\n      \"by_reference\": true,\n      \"source_id\": \"proident magna dolore ad\",\n      \"to_external_acct\": true\n    },\n    \"state\": \"ACTIVE\",\n    \"tags\": [\n      \"birds\",\n      \"sea\"\n    ],\n    \"text_tracks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"transcripts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"updated_at\": \"ad est\",\n    \"updated_by\": {\n      \"email\": \"consectetur labore\",\n      \"id\": \"c\",\n      \"type\": \"api_key\"\n    },\n    \"variants\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  {\n    \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n    \"clip_source_video_id\": \"sint irure cupidatat nisi ipsum\",\n    \"complete\": true,\n    \"created_at\": \"2015-09-17T16:08:37.108Z\",\n    \"created_by\": {\n      \"email\": \"ipsum esse\",\n      \"id\": \"aliquip ut\",\n      \"type\": \"api_key\"\n    },\n    \"cue_points\": [\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"custom_fields\": {\n      \"dolore105\": \"amet qui\",\n      \"ut_d\": \"magna do ad est\",\n      \"do_f\": \"pariat\"\n    },\n    \"delivery_type\": \"dynamic_origin\",\n    \"description\": \"Herring gull on a wharf in Boston\",\n    \"digital_master_id\": \"esse pariatur et exercitation\",\n    \"drm_disabled\": true,\n    \"duration\": 18160,\n    \"economics\": \"AD_SUPPORTED\",\n    \"folder_id\": \"560039e5e4b0e69e4b01cacd\",\n    \"forensic_watermarking\": \"ACTIVE\",\n    \"geo\": {\n      \"countries\": [\n        \"us\",\n        \"ca\",\n        \"fr\"\n      ],\n      \"exclude_countries\": true,\n      \"restricted\": true\n    },\n    \"has_digital_master\": true,\n    \"id\": \"cupidatat consectetur Ut pariatur\",\n    \"images\": {\n      \"thumbnail\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n            \"height\": 90,\n            \"width\": 160\n          }\n        ]\n      },\n      \"poster\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n            \"height\": 720,\n            \"width\": 1280\n          }\n        ]\n      },\n      \"portrait.es\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n            \"height\": 1200,\n            \"width\": 800\n          }\n        ]\n      },\n      \"thumbnail.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n            \"height\": 108,\n            \"width\": 292\n          }\n        ]\n      },\n      \"poster.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n            \"height\": 1080,\n            \"width\": 1920\n          }\n        ]\n      },\n      \"square.de\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n            \"height\": 570,\n            \"width\": 570\n          }\n        ]\n      },\n      \"ultra-wide.hi\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n            \"height\": 1646,\n            \"width\": 3840\n          }\n        ]\n      },\n      \"wide.fr\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n            \"height\": 1440,\n            \"width\": 2560\n          }\n        ]\n      }\n    },\n    \"labels\": [\n      \"cupidatat nisi\",\n      \"culpa Ut laborum ut consequat\"\n    ],\n    \"link\": {\n      \"text\": \"esse nulla consecte\",\n      \"url\": \"adipisicing nostrud consequat officia\"\n    },\n    \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n    \"name\": \"Laughing Gull\",\n    \"offline_enabled\": true,\n    \"original_filename\": \"gull-boston.mov\",\n    \"playback_rights_id\": \"tempor culpa mollit Excepteur\",\n    \"projection\": \"equirectangular\",\n    \"published_at\": \"dolore et laborum\",\n    \"reference_id\": \"laughing_gull_2019_04_25\",\n    \"schedule\": {\n      \"ends_at\": \"dolor sunt\",\n      \"starts_at\": \"reprehenderit eu laboris nisi\"\n    },\n    \"sharing\": {\n      \"by_external_acct\": true,\n      \"by_id\": \"deserunt\",\n      \"by_reference\": true,\n      \"source_id\": \"ut id Ut\",\n      \"to_external_acct\": true\n    },\n    \"state\": \"ACTIVE\",\n    \"tags\": [\n      \"birds\",\n      \"sea\"\n    ],\n    \"text_tracks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"transcripts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"updated_at\": \"ad exercitation\",\n    \"updated_by\": {\n      \"email\": \"sint pariatur commodo\",\n      \"id\": \"minim nulla laborum fugiat esse\",\n      \"type\": \"api_key\"\n    },\n    \"variants\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n]"
										},
										{
											"name": "INVALID_SORT: sort parameter specified and invalid field\nILLEGAL_QUERY: The search string syntax was invalid - example",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos?limit=20&offset=20&sort=created_at&query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "created_at"
														},
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos?limit=20&offset=20&sort=created_at&query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "created_at"
														},
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos?limit=20&offset=20&sort=created_at&query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "created_at"
														},
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: Resource not found ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos?limit=20&offset=20&sort=created_at&query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "created_at"
														},
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos?limit=20&offset=20&sort=created_at&query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "created_at"
														},
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos?limit=20&offset=20&sort=created_at&query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "created_at"
														},
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Video",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"A happy herring gull\",\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"incididunt nisi esse dolor\",\n      \"name\": \"non quis mollit velit\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"magna ipsum sit\",\n      \"name\": \"ex laborum sit commodo\"\n    }\n  ],\n  \"custom_fields\": {\n    \"subject\": \"birds\"\n  },\n  \"description\": \"Laughing Gull\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": true\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"offline_enabled\": true,\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"al\",\n    \"starts_at\": \"anim officia\"\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/videos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"videos"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Create a new video object in the account. Note: this does not ingest a video file - use the Dynamic Ingest API for ingestion"
									},
									"response": [
										{
											"name": "Video created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"A happy herring gull\",\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"Duis nostrud\",\n      \"name\": \"dolore commodo\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"et occaecat\",\n      \"name\": \"non enim\"\n    }\n  ],\n  \"custom_fields\": {\n    \"subject\": \"birds\"\n  },\n  \"description\": \"Laughing Gull\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": false,\n    \"restricted\": false\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"offline_enabled\": true,\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"magna\",\n    \"starts_at\": \"eiusmod non aute labore\"\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n  \"clip_source_video_id\": \"ut eu temp\",\n  \"complete\": true,\n  \"created_at\": \"2015-09-17T16:08:37.108Z\",\n  \"created_by\": {\n    \"email\": \"pariatur esse minim ut\",\n    \"id\": \"dolore irure aliqua ea\",\n    \"type\": \"internal\"\n  },\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"DATA\",\n      \"id\": \"elit sint veniam\",\n      \"metadata\": \"deserunt irure nostrud Ut consectetur\",\n      \"name\": \"Duis do veniam\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"DATA\",\n      \"id\": \"sed non nisi\",\n      \"metadata\": \"reprehenderit dolor Excepteur\",\n      \"name\": \"deserunt\"\n    }\n  ],\n  \"custom_fields\": {\n    \"cillum80\": \"L\"\n  },\n  \"delivery_type\": \"dynamic_origin\",\n  \"description\": \"Herring gull on a wharf in Boston\",\n  \"digital_master_id\": \"dolor veniam occaecat\",\n  \"drm_disabled\": true,\n  \"duration\": 18160,\n  \"economics\": \"AD_SUPPORTED\",\n  \"folder_id\": \"560039e5e4b0e69e4b01cacd\",\n  \"forensic_watermarking\": \"ACTIVE\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": true,\n    \"restricted\": true\n  },\n  \"has_digital_master\": true,\n  \"id\": \"enim tempor\",\n  \"images\": {\n    \"thumbnail\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n          \"height\": 90,\n          \"width\": 160\n        }\n      ]\n    },\n    \"poster\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n          \"height\": 720,\n          \"width\": 1280\n        }\n      ]\n    },\n    \"portrait.es\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n          \"height\": 1200,\n          \"width\": 800\n        }\n      ]\n    },\n    \"thumbnail.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n          \"height\": 108,\n          \"width\": 292\n        }\n      ]\n    },\n    \"poster.en\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n          \"height\": 1080,\n          \"width\": 1920\n        }\n      ]\n    },\n    \"square.de\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n          \"height\": 570,\n          \"width\": 570\n        }\n      ]\n    },\n    \"ultra-wide.hi\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n          \"height\": 1646,\n          \"width\": 3840\n        }\n      ]\n    },\n    \"wide.fr\": {\n      \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n      \"sources\": [\n        {\n          \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n          \"height\": 1440,\n          \"width\": 2560\n        }\n      ]\n    }\n  },\n  \"labels\": [\n    \"ut laborum proident voluptate\",\n    \"Excepteur in\"\n  ],\n  \"link\": {\n    \"text\": \"ipsum labore id\",\n    \"url\": \"nostrud cupidatat ut adipisicing commodo\"\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"name\": \"Laughing Gull\",\n  \"offline_enabled\": true,\n  \"original_filename\": \"gull-boston.mov\",\n  \"playback_rights_id\": \"quis irure culpa amet\",\n  \"projection\": \"equirectangular\",\n  \"published_at\": \"do incididunt\",\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"exercitation\",\n    \"starts_at\": \"eiusmod est voluptate labore\"\n  },\n  \"sharing\": {\n    \"by_external_acct\": true,\n    \"by_id\": \"elit labore occaecat magna\",\n    \"by_reference\": true,\n    \"source_id\": \"Duis aliquip\",\n    \"to_external_acct\": true\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ],\n  \"text_tracks\": [\n    {\n      \"default\": false,\n      \"id\": \"dolore ex do fugiat\",\n      \"kind\": \"captions\",\n      \"label\": \"id eu commodo sint\",\n      \"mime_type\": \"incidi\",\n      \"src\": \"consectetur ex Duis culpa sint\",\n      \"srclang\": \"cillum esse nisi do\",\n      \"status\": {}\n    },\n    {\n      \"default\": false,\n      \"id\": \"dolore nulla\",\n      \"kind\": \"captions\",\n      \"label\": \"occaecat\",\n      \"mime_type\": \"ad Ut consectetur sunt\",\n      \"src\": \"ea ex\",\n      \"srclang\": \"labore et ea\",\n      \"status\": {}\n    }\n  ],\n  \"transcripts\": [\n    {\n      \"src\": \"consectetur dolor\",\n      \"srclang\": \"Ut sunt reprehenderit velit\",\n      \"id\": \"fugiat sunt non\",\n      \"account_id\": \"mollit tempor sed\",\n      \"default\": false,\n      \"label\": \"ullamco nulla nisi\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"draft\"\n    },\n    {\n      \"src\": \"incididunt qui\",\n      \"srclang\": \"reprehenderit ad\",\n      \"id\": \"ad voluptate Ut fugiat\",\n      \"account_id\": \"laboris reprehenderit ut ut\",\n      \"default\": true,\n      \"label\": \"Duis\",\n      \"sources\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"status\": \"published\"\n    }\n  ],\n  \"updated_at\": \"laborum nostrud ullamco\",\n  \"updated_by\": {\n    \"email\": \"ut fugiat laboris\",\n    \"id\": \"amet nulla aliqua\",\n    \"type\": \"internal\"\n  },\n  \"variants\": [\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"long_description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"custom_fields\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"A happy herring gull\",\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"Duis nostrud\",\n      \"name\": \"dolore commodo\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"et occaecat\",\n      \"name\": \"non enim\"\n    }\n  ],\n  \"custom_fields\": {\n    \"subject\": \"birds\"\n  },\n  \"description\": \"Laughing Gull\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": false,\n    \"restricted\": false\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"offline_enabled\": true,\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"magna\",\n    \"starts_at\": \"eiusmod non aute labore\"\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "BAD_VALUE: Spelling error or other use of non-existent field ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"A happy herring gull\",\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"Duis nostrud\",\n      \"name\": \"dolore commodo\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"et occaecat\",\n      \"name\": \"non enim\"\n    }\n  ],\n  \"custom_fields\": {\n    \"subject\": \"birds\"\n  },\n  \"description\": \"Laughing Gull\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": false,\n    \"restricted\": false\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"offline_enabled\": true,\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"magna\",\n    \"starts_at\": \"eiusmod non aute labore\"\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"A happy herring gull\",\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"Duis nostrud\",\n      \"name\": \"dolore commodo\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"et occaecat\",\n      \"name\": \"non enim\"\n    }\n  ],\n  \"custom_fields\": {\n    \"subject\": \"birds\"\n  },\n  \"description\": \"Laughing Gull\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": false,\n    \"restricted\": false\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"offline_enabled\": true,\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"magna\",\n    \"starts_at\": \"eiusmod non aute labore\"\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"A happy herring gull\",\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"Duis nostrud\",\n      \"name\": \"dolore commodo\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"et occaecat\",\n      \"name\": \"non enim\"\n    }\n  ],\n  \"custom_fields\": {\n    \"subject\": \"birds\"\n  },\n  \"description\": \"Laughing Gull\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": false,\n    \"restricted\": false\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"offline_enabled\": true,\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"magna\",\n    \"starts_at\": \"eiusmod non aute labore\"\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "REFERENCE_ID_IN_USE: You attempted to create a video with a reference id that is already in use, or add a reference id to a video which is already used by another video",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"A happy herring gull\",\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"Duis nostrud\",\n      \"name\": \"dolore commodo\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"et occaecat\",\n      \"name\": \"non enim\"\n    }\n  ],\n  \"custom_fields\": {\n    \"subject\": \"birds\"\n  },\n  \"description\": \"Laughing Gull\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": false,\n    \"restricted\": false\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"offline_enabled\": true,\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"magna\",\n    \"starts_at\": \"eiusmod non aute labore\"\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "ILLEGAL_FIELD: Spelling error or other use of non-existent field ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"A happy herring gull\",\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"Duis nostrud\",\n      \"name\": \"dolore commodo\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"et occaecat\",\n      \"name\": \"non enim\"\n    }\n  ],\n  \"custom_fields\": {\n    \"subject\": \"birds\"\n  },\n  \"description\": \"Laughing Gull\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": false,\n    \"restricted\": false\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"offline_enabled\": true,\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"magna\",\n    \"starts_at\": \"eiusmod non aute labore\"\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"A happy herring gull\",\n  \"cue_points\": [\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"Duis nostrud\",\n      \"name\": \"dolore commodo\"\n    },\n    {\n      \"time\": 10.527,\n      \"type\": \"AD\",\n      \"metadata\": \"et occaecat\",\n      \"name\": \"non enim\"\n    }\n  ],\n  \"custom_fields\": {\n    \"subject\": \"birds\"\n  },\n  \"description\": \"Laughing Gull\",\n  \"drm_disabled\": true,\n  \"economics\": \"AD_SUPPORTED\",\n  \"geo\": {\n    \"countries\": [\n      \"us\",\n      \"ca\",\n      \"fr\"\n    ],\n    \"exclude_countries\": false,\n    \"restricted\": false\n  },\n  \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n  \"offline_enabled\": true,\n  \"reference_id\": \"laughing_gull_2019_04_25\",\n  \"schedule\": {\n    \"ends_at\": \"magna\",\n    \"starts_at\": \"eiusmod non aute labore\"\n  },\n  \"state\": \"ACTIVE\",\n  \"tags\": [\n    \"birds\",\n    \"sea\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/videos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"videos"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "counts",
							"item": [
								{
									"name": "playlists",
									"item": [
										{
											"name": "Get Playlist Count",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists?query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"counts",
														"playlists"
													],
													"query": [
														{
															"key": "query",
															"value": "+name:Birds",
															"description": "Search string - see [search guide](/cms/searching/cms-and-playback-apis-video-search-v2.html) for details"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												},
												"description": "Gets a count of playlists in the account for the account "
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists?query=+name:Birds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists"
															],
															"query": [
																{
																	"key": "query",
																	"value": "+name:Birds"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": 84\n}"
												},
												{
													"name": "'INVALID_SORT: sort parameter specified and invalid field\nINVALID_SEARCH: search string invalid (may not have been URI-encoded)'",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists?query=+name:Birds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists"
															],
															"query": [
																{
																	"key": "query",
																	"value": "+name:Birds"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists?query=+name:Birds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists"
															],
															"query": [
																{
																	"key": "query",
																	"value": "+name:Birds"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists?query=+name:Birds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists"
															],
															"query": [
																{
																	"key": "query",
																	"value": "+name:Birds"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists?query=+name:Birds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists"
															],
															"query": [
																{
																	"key": "query",
																	"value": "+name:Birds"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists?query=+name:Birds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists"
															],
															"query": [
																{
																	"key": "query",
																	"value": "+name:Birds"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get Video Count in Playlist",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists/:playlist_id/videos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"counts",
														"playlists",
														":playlist_id",
														"videos"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "playlist_id",
															"value": "officia laborum",
															"description": "(Required) Playlist ID."
														}
													]
												},
												"description": "Gets a count of the videos in a playlist for the account "
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists/:playlist_id/videos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists",
																":playlist_id",
																"videos"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"count\": 5\n}"
												},
												{
													"name": "'INVALID_SORT: sort parameter specified and invalid field\nINVALID_SEARCH: search string invalid (may not have been URI-encoded)'",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists/:playlist_id/videos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists",
																":playlist_id",
																"videos"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists/:playlist_id/videos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists",
																":playlist_id",
																"videos"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists/:playlist_id/videos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists",
																":playlist_id",
																"videos"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists/:playlist_id/videos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists",
																":playlist_id",
																"videos"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/playlists/:playlist_id/videos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"counts",
																"playlists",
																":playlist_id",
																"videos"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Video Count",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/videos?query=+name:Birds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"counts",
												"videos"
											],
											"query": [
												{
													"key": "query",
													"value": "+name:Birds",
													"description": "Search string - see [search guide](/cms/searching/cms-and-playback-apis-video-search-v2.html) for details"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Gets count of videos for the account or a search "
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/videos?query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"counts",
														"videos"
													],
													"query": [
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": 7650\n}"
										},
										{
											"name": "INVALID_SORT: sort parameter specified and invalid field ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/videos?query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"counts",
														"videos"
													],
													"query": [
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/videos?query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"counts",
														"videos"
													],
													"query": [
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/videos?query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"counts",
														"videos"
													],
													"query": [
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/videos?query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"counts",
														"videos"
													],
													"query": [
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/videos?query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"counts",
														"videos"
													],
													"query": [
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/videos?query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"counts",
														"videos"
													],
													"query": [
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/counts/videos?query=+name:Birds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"counts",
														"videos"
													],
													"query": [
														{
															"key": "query",
															"value": "+name:Birds"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "video fields",
							"item": [
								{
									"name": "custom fields",
									"item": [
										{
											"name": "{custom field id}",
											"item": [
												{
													"name": "Get a Custom Field",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields",
																":custom_field_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) Custom Field ID."
																}
															]
														},
														"description": "Gets a list of custom fields for the account"
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) Custom Field ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"description\": \"ullamco\",\n  \"display_name\": \"labore dolor ullamco sed\",\n  \"enum_values\": [\n    \"laborum et pariatur\",\n    \"in veniam\"\n  ],\n  \"id\": \"est deserunt consequ\",\n  \"required\": false,\n  \"type\": \"ea eu proident\"\n}"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) Custom Field ID."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) Custom Field ID."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) Custom Field ID."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) Custom Field ID."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) Custom Field ID."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) Custom Field ID."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update a Custom Field",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"sunt\",\n  \"display_name\": \"sed irure magna laboris\",\n  \"enum_values\": [\n    \"elit fugiat ullamco ex\",\n    \"est\"\n  ],\n  \"id\": \"irure\",\n  \"required\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields",
																":custom_field_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														},
														"description": "Update a new custom field for the account"
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"aliqua irure amet in\",\n  \"display_name\": \"ut consectetur\",\n  \"enum_values\": [\n    \"dolore incididunt\",\n    \"in\"\n  ],\n  \"id\": \"officia sint\",\n  \"required\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"description\": \"Lorem in dolore amet qui\",\n  \"display_name\": \"enim elit ullamco\",\n  \"enum_values\": [\n    \"fugiat magna incididunt eiusmod\",\n    \"ipsum culpa do irure\"\n  ],\n  \"id\": \"Excepteur tempor\",\n  \"required\": false,\n  \"type\": \"ea commodo ullamco\"\n}"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"aliqua irure amet in\",\n  \"display_name\": \"ut consectetur\",\n  \"enum_values\": [\n    \"dolore incididunt\",\n    \"in\"\n  ],\n  \"id\": \"officia sint\",\n  \"required\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"aliqua irure amet in\",\n  \"display_name\": \"ut consectetur\",\n  \"enum_values\": [\n    \"dolore incididunt\",\n    \"in\"\n  ],\n  \"id\": \"officia sint\",\n  \"required\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"aliqua irure amet in\",\n  \"display_name\": \"ut consectetur\",\n  \"enum_values\": [\n    \"dolore incididunt\",\n    \"in\"\n  ],\n  \"id\": \"officia sint\",\n  \"required\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"aliqua irure amet in\",\n  \"display_name\": \"ut consectetur\",\n  \"enum_values\": [\n    \"dolore incididunt\",\n    \"in\"\n  ],\n  \"id\": \"officia sint\",\n  \"required\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"aliqua irure amet in\",\n  \"display_name\": \"ut consectetur\",\n  \"enum_values\": [\n    \"dolore incididunt\",\n    \"in\"\n  ],\n  \"id\": \"officia sint\",\n  \"required\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"aliqua irure amet in\",\n  \"display_name\": \"ut consectetur\",\n  \"enum_values\": [\n    \"dolore incididunt\",\n    \"in\"\n  ],\n  \"id\": \"officia sint\",\n  \"required\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Delete a Custom Field",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields",
																":custom_field_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														},
														"description": "Delete a new custom field for the account"
													},
													"response": [
														{
															"name": "204 No Content",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields/:custom_field_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"video_fields",
																		"custom_fields",
																		":custom_field_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Get Custom Fields",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"video_fields",
														"custom_fields"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												},
												"description": "Gets a list of custom fields for the account"
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"description\": \"officia\",\n    \"display_name\": \"incididunt magna sed sint\",\n    \"enum_values\": [\n      \"laboris id Ut sit mollit\",\n      \"in sint\"\n    ],\n    \"id\": \"aute officia tempor\",\n    \"required\": false,\n    \"type\": \"anim occaecat deserunt ea eu\"\n  },\n  {\n    \"description\": \"amet Ut in irure\",\n    \"display_name\": \"au\",\n    \"enum_values\": [\n      \"elit officia\",\n      \"sunt ad dolor id\"\n    ],\n    \"id\": \"ea anim fugiat consequat cupidatat\",\n    \"required\": false,\n    \"type\": \"fugiat esse ea minim\"\n  }\n]"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Create a Custom Field",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"ullamco\",\n  \"display_name\": \"labore dolor ullamco sed\",\n  \"enum_values\": [\n    \"laborum et pariatur\",\n    \"in veniam\"\n  ],\n  \"id\": \"est deserunt consequ\",\n  \"required\": false,\n  \"type\": \"ea eu proident\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"video_fields",
														"custom_fields"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												},
												"description": "Create a new custom field for the account"
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"ullamco\",\n  \"display_name\": \"labore dolor ullamco sed\",\n  \"enum_values\": [\n    \"laborum et pariatur\",\n    \"in veniam\"\n  ],\n  \"id\": \"est deserunt consequ\",\n  \"required\": false,\n  \"type\": \"ea eu proident\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"description\": \"ullamco\",\n  \"display_name\": \"labore dolor ullamco sed\",\n  \"enum_values\": [\n    \"laborum et pariatur\",\n    \"in veniam\"\n  ],\n  \"id\": \"est deserunt consequ\",\n  \"required\": false,\n  \"type\": \"ea eu proident\"\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"ullamco\",\n  \"display_name\": \"labore dolor ullamco sed\",\n  \"enum_values\": [\n    \"laborum et pariatur\",\n    \"in veniam\"\n  ],\n  \"id\": \"est deserunt consequ\",\n  \"required\": false,\n  \"type\": \"ea eu proident\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"ullamco\",\n  \"display_name\": \"labore dolor ullamco sed\",\n  \"enum_values\": [\n    \"laborum et pariatur\",\n    \"in veniam\"\n  ],\n  \"id\": \"est deserunt consequ\",\n  \"required\": false,\n  \"type\": \"ea eu proident\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"ullamco\",\n  \"display_name\": \"labore dolor ullamco sed\",\n  \"enum_values\": [\n    \"laborum et pariatur\",\n    \"in veniam\"\n  ],\n  \"id\": \"est deserunt consequ\",\n  \"required\": false,\n  \"type\": \"ea eu proident\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"ullamco\",\n  \"display_name\": \"labore dolor ullamco sed\",\n  \"enum_values\": [\n    \"laborum et pariatur\",\n    \"in veniam\"\n  ],\n  \"id\": \"est deserunt consequ\",\n  \"required\": false,\n  \"type\": \"ea eu proident\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"ullamco\",\n  \"display_name\": \"labore dolor ullamco sed\",\n  \"enum_values\": [\n    \"laborum et pariatur\",\n    \"in veniam\"\n  ],\n  \"id\": \"est deserunt consequ\",\n  \"required\": false,\n  \"type\": \"ea eu proident\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"ullamco\",\n  \"display_name\": \"labore dolor ullamco sed\",\n  \"enum_values\": [\n    \"laborum et pariatur\",\n    \"in veniam\"\n  ],\n  \"id\": \"est deserunt consequ\",\n  \"required\": false,\n  \"type\": \"ea eu proident\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields/custom_fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"video_fields",
																"custom_fields"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Video Fields",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"video_fields"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Gets a list of custom fields for the account (note that this operation may later return standard fields as well - current it returns an empty array for `standard_fields`)"
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"video_fields"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"custom_fields\": [\n    {\n      \"description\": \"labore voluptate dolor sed\",\n      \"display_name\": \"ut officia culpa i\",\n      \"enum_values\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"Excepteur laboris voluptate do cupidatat\",\n      \"required\": false,\n      \"type\": \"vo\"\n    },\n    {\n      \"description\": \"reprehenderit cillum dolor velit\",\n      \"display_name\": \"consequat\",\n      \"enum_values\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"est Ut voluptate\",\n      \"required\": false,\n      \"type\": \"exer\"\n    }\n  ],\n  \"max_custom_fields\": \"Excepteur eiusmod\",\n  \"standard_fields\": [\n    {\n      \"description\": \"magna officia\",\n      \"id\": \"qui esse\",\n      \"required\": false\n    },\n    {\n      \"description\": \"et amet cillum ipsum\",\n      \"id\": \"cillum in\",\n      \"required\": true\n    }\n  ]\n}"
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"video_fields"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"video_fields"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"video_fields"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"video_fields"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"video_fields"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/video_fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"video_fields"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "channels",
							"item": [
								{
									"name": "{channel name}",
									"item": [
										{
											"name": "members",
											"item": [
												{
													"name": "{affiliate account id}",
													"item": [
														{
															"name": "Add Affiliate",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"account_id\": \"1937897674001\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"channels",
																		":channel_name",
																		"members",
																		":affiliate_account_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "channel_name",
																			"value": "officia laborum",
																			"description": "(Required) The name of the channel - usually `default`"
																		},
																		{
																			"key": "affiliate_account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																		}
																	]
																},
																"description": "Adds an affiliate to a channel - this is a Master account operation "
															},
															"response": [
																{
																	"name": "200",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1937897674001\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"account_id\": \"1937897674001\"\n}"
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1937897674001\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1937897674001\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: Resource not found ",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1937897674001\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1937897674001\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"account_id\": \"1937897674001\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Remove Affiliate",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"channels",
																		":channel_name",
																		"members",
																		":affiliate_account_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "channel_name",
																			"value": "officia laborum",
																			"description": "(Required) The name of the channel - usually `default`"
																		},
																		{
																			"key": "affiliate_account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																		}
																	]
																},
																"description": "Removes an affiliate from a channel - this is a Master account operation"
															},
															"response": [
																{
																	"name": "Item was deleted",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: Resource not found ",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members/:affiliate_account_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"channels",
																				":channel_name",
																				"members",
																				":affiliate_account_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "channel_name",
																					"value": "officia laborum",
																					"description": "(Required) The name of the channel - usually `default`"
																				},
																				{
																					"key": "affiliate_account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud affiliate account ID for media sharing relationships"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "List Channel Affiliates",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name",
																"members"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														},
														"description": "Gets a list of affiliates for a channel - this is a Master account operation"
													},
													"response": [
														{
															"name": "200",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"channels",
																		":channel_name",
																		"members"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "channel_name",
																			"value": "officia laborum",
																			"description": "(Required) The name of the channel - usually `default`"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"account_id\": \"velit reprehenderit ut quis\",\n    \"account_name\": \"eu nostrud veniam aliqua\",\n    \"approved\": false\n  },\n  {\n    \"account_id\": \"occaecat ut\",\n    \"account_name\": \"cillum proident dolo\",\n    \"approved\": true\n  }\n]"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"channels",
																		":channel_name",
																		"members"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "channel_name",
																			"value": "officia laborum",
																			"description": "(Required) The name of the channel - usually `default`"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"channels",
																		":channel_name",
																		"members"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "channel_name",
																			"value": "officia laborum",
																			"description": "(Required) The name of the channel - usually `default`"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: Resource not found ",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"channels",
																		":channel_name",
																		"members"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "channel_name",
																			"value": "officia laborum",
																			"description": "(Required) The name of the channel - usually `default`"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"channels",
																		":channel_name",
																		"members"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "channel_name",
																			"value": "officia laborum",
																			"description": "(Required) The name of the channel - usually `default`"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name/members",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"channels",
																		":channel_name",
																		"members"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "channel_name",
																			"value": "officia laborum",
																			"description": "(Required) The name of the channel - usually `default`"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Get Channel Details",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"channels",
														":channel_name"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "channel_name",
															"value": "officia laborum",
															"description": "(Required) The name of the channel - usually `default`"
														}
													]
												},
												"description": "Gets settings for a sharing channel (currently there is only one default channel) - this is a Master account operation"
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"account_id\": \"veniam Duis\",\n  \"account_name\": \"ea magna commodo fugiat\",\n  \"created_at\": \"ex mollit Duis\",\n  \"enforce_custom_fields\": false,\n  \"enforce_geo\": true,\n  \"name\": \"aute in\",\n  \"updated_at\": \"esse\"\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: Resource not found ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update Channel",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"account_id\": \"in dolor Lorem\",\n  \"account_name\": \"ut amet cillum eiusmod\",\n  \"enforce_custom_fields\": true,\n  \"enforce_geo\": true,\n  \"name\": \"nisi\",\n  \"updated_at\": \"sit sed\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"channels",
														":channel_name"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "channel_name",
															"value": "officia laborum",
															"description": "(Required) The name of the channel - usually `default`"
														}
													]
												},
												"description": "Updates settings for a sharing channel (currently there is only one default channel) - this is a Master account operation"
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"in dolor Lorem\",\n  \"account_name\": \"ut amet cillum eiusmod\",\n  \"enforce_custom_fields\": true,\n  \"enforce_geo\": true,\n  \"name\": \"nisi\",\n  \"updated_at\": \"sit sed\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"account_id\": \"veniam Duis\",\n  \"account_name\": \"ea magna commodo fugiat\",\n  \"created_at\": \"ex mollit Duis\",\n  \"enforce_custom_fields\": false,\n  \"enforce_geo\": true,\n  \"name\": \"aute in\",\n  \"updated_at\": \"esse\"\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"in dolor Lorem\",\n  \"account_name\": \"ut amet cillum eiusmod\",\n  \"enforce_custom_fields\": true,\n  \"enforce_geo\": true,\n  \"name\": \"nisi\",\n  \"updated_at\": \"sit sed\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"in dolor Lorem\",\n  \"account_name\": \"ut amet cillum eiusmod\",\n  \"enforce_custom_fields\": true,\n  \"enforce_geo\": true,\n  \"name\": \"nisi\",\n  \"updated_at\": \"sit sed\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: Resource not found ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"in dolor Lorem\",\n  \"account_name\": \"ut amet cillum eiusmod\",\n  \"enforce_custom_fields\": true,\n  \"enforce_geo\": true,\n  \"name\": \"nisi\",\n  \"updated_at\": \"sit sed\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"in dolor Lorem\",\n  \"account_name\": \"ut amet cillum eiusmod\",\n  \"enforce_custom_fields\": true,\n  \"enforce_geo\": true,\n  \"name\": \"nisi\",\n  \"updated_at\": \"sit sed\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"in dolor Lorem\",\n  \"account_name\": \"ut amet cillum eiusmod\",\n  \"enforce_custom_fields\": true,\n  \"enforce_geo\": true,\n  \"name\": \"nisi\",\n  \"updated_at\": \"sit sed\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/channels/:channel_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"channels",
																":channel_name"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "channel_name",
																	"value": "officia laborum",
																	"description": "(Required) The name of the channel - usually `default`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List Channels",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/channels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"channels"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Gets a list of channels (currently there is only one default channel) - this is a Master account operation"
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/channels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"channels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"account_id\": \"et mag\",\n    \"account_name\": \"occ\",\n    \"created_at\": \"reprehenderit ullamco ea\",\n    \"enforce_custom_fields\": false,\n    \"enforce_geo\": true,\n    \"name\": \"aute quis Duis Ut\",\n    \"updated_at\": \"proident aute\"\n  },\n  {\n    \"account_id\": \"sunt dolore\",\n    \"account_name\": \"tempor ex esse laboris\",\n    \"created_at\": \"qui\",\n    \"enforce_custom_fields\": false,\n    \"enforce_geo\": true,\n    \"name\": \"anim ea minim dolor\",\n    \"updated_at\": \"amet in ad\"\n  }\n]"
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/channels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"channels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact Support",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/channels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"channels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: Resource not found ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/channels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"channels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/channels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"channels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/channels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"channels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "contracts",
							"item": [
								{
									"name": "{master account id}",
									"item": [
										{
											"name": "Get Contract",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"contracts",
														":master_account_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "master_account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud master account ID for media sharing relationships"
														}
													]
												},
												"description": "Gets a list of available sharing contracts - this is an Affiliate account operation"
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"account_id\": \"nostrud Lorem\",\n  \"approved\": true,\n  \"approved_at\": \"aliquip voluptate anim magna\",\n  \"auto_accept\": true,\n  \"channel\": {\n    \"account_id\": \"eu sint ipsum\",\n    \"account_name\": \"fugiat\",\n    \"created_at\": \"voluptate dolore officia\",\n    \"enforce_custom_fields\": false,\n    \"enforce_geo\": false,\n    \"name\": \"irure cillum labore minim\",\n    \"updated_at\": \"ut est elit\"\n  },\n  \"created_at\": \"cupidatat non ad in\",\n  \"updated_at\": \"ullamco in eu magna\"\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: Resource not found ",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Approve Contract",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"account_id\": \"eiusmod incididunt aliqua cupidatat\",\n  \"approved\": true,\n  \"approved_at\": \"proident reprehenderit cupidatat\",\n  \"auto_accept\": false,\n  \"channel\": {\n    \"account_id\": \"ut\",\n    \"account_name\": \"ex Ut ipsum exercitation\",\n    \"enforce_custom_fields\": true,\n    \"enforce_geo\": false,\n    \"name\": \"exercitation mollit ipsum tempor\",\n    \"updated_at\": \"nostrud dolore ut\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"contracts",
														":master_account_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "master_account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud master account ID for media sharing relationships"
														}
													]
												},
												"description": "Approve a contract - this is an Affiliate account operation "
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"eiusmod incididunt aliqua cupidatat\",\n  \"approved\": true,\n  \"approved_at\": \"proident reprehenderit cupidatat\",\n  \"auto_accept\": false,\n  \"channel\": {\n    \"account_id\": \"ut\",\n    \"account_name\": \"ex Ut ipsum exercitation\",\n    \"enforce_custom_fields\": true,\n    \"enforce_geo\": false,\n    \"name\": \"exercitation mollit ipsum tempor\",\n    \"updated_at\": \"nostrud dolore ut\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"account_id\": \"nostrud Lorem\",\n  \"approved\": true,\n  \"approved_at\": \"aliquip voluptate anim magna\",\n  \"auto_accept\": true,\n  \"channel\": {\n    \"account_id\": \"eu sint ipsum\",\n    \"account_name\": \"fugiat\",\n    \"created_at\": \"voluptate dolore officia\",\n    \"enforce_custom_fields\": false,\n    \"enforce_geo\": false,\n    \"name\": \"irure cillum labore minim\",\n    \"updated_at\": \"ut est elit\"\n  },\n  \"created_at\": \"cupidatat non ad in\",\n  \"updated_at\": \"ullamco in eu magna\"\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"eiusmod incididunt aliqua cupidatat\",\n  \"approved\": true,\n  \"approved_at\": \"proident reprehenderit cupidatat\",\n  \"auto_accept\": false,\n  \"channel\": {\n    \"account_id\": \"ut\",\n    \"account_name\": \"ex Ut ipsum exercitation\",\n    \"enforce_custom_fields\": true,\n    \"enforce_geo\": false,\n    \"name\": \"exercitation mollit ipsum tempor\",\n    \"updated_at\": \"nostrud dolore ut\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"eiusmod incididunt aliqua cupidatat\",\n  \"approved\": true,\n  \"approved_at\": \"proident reprehenderit cupidatat\",\n  \"auto_accept\": false,\n  \"channel\": {\n    \"account_id\": \"ut\",\n    \"account_name\": \"ex Ut ipsum exercitation\",\n    \"enforce_custom_fields\": true,\n    \"enforce_geo\": false,\n    \"name\": \"exercitation mollit ipsum tempor\",\n    \"updated_at\": \"nostrud dolore ut\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: Resource not found ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"eiusmod incididunt aliqua cupidatat\",\n  \"approved\": true,\n  \"approved_at\": \"proident reprehenderit cupidatat\",\n  \"auto_accept\": false,\n  \"channel\": {\n    \"account_id\": \"ut\",\n    \"account_name\": \"ex Ut ipsum exercitation\",\n    \"enforce_custom_fields\": true,\n    \"enforce_geo\": false,\n    \"name\": \"exercitation mollit ipsum tempor\",\n    \"updated_at\": \"nostrud dolore ut\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"eiusmod incididunt aliqua cupidatat\",\n  \"approved\": true,\n  \"approved_at\": \"proident reprehenderit cupidatat\",\n  \"auto_accept\": false,\n  \"channel\": {\n    \"account_id\": \"ut\",\n    \"account_name\": \"ex Ut ipsum exercitation\",\n    \"enforce_custom_fields\": true,\n    \"enforce_geo\": false,\n    \"name\": \"exercitation mollit ipsum tempor\",\n    \"updated_at\": \"nostrud dolore ut\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"account_id\": \"eiusmod incididunt aliqua cupidatat\",\n  \"approved\": true,\n  \"approved_at\": \"proident reprehenderit cupidatat\",\n  \"auto_accept\": false,\n  \"channel\": {\n    \"account_id\": \"ut\",\n    \"account_name\": \"ex Ut ipsum exercitation\",\n    \"enforce_custom_fields\": true,\n    \"enforce_geo\": false,\n    \"name\": \"exercitation mollit ipsum tempor\",\n    \"updated_at\": \"nostrud dolore ut\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/:master_account_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"contracts",
																":master_account_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "master_account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud master account ID for media sharing relationships"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "List Contracts",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"contracts",
												""
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Gets a list of available sharing contracts - this is an Affiliate account operation"
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"contracts",
														""
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account_id\": \"nostrud Lorem\",\n  \"approved\": true,\n  \"approved_at\": \"aliquip voluptate anim magna\",\n  \"auto_accept\": true,\n  \"channel\": {\n    \"account_id\": \"eu sint ipsum\",\n    \"account_name\": \"fugiat\",\n    \"created_at\": \"voluptate dolore officia\",\n    \"enforce_custom_fields\": false,\n    \"enforce_geo\": false,\n    \"name\": \"irure cillum labore minim\",\n    \"updated_at\": \"ut est elit\"\n  },\n  \"created_at\": \"cupidatat non ad in\",\n  \"updated_at\": \"ullamco in eu magna\"\n}"
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"contracts",
														""
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is  unavailable - this may be a temporary condition while some kind of processing of the video is in progress, but if the message persists, contact",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"contracts",
														""
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: Resource not found ",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"contracts",
														""
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"contracts",
														""
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/contracts/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"contracts",
														""
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "playlists",
							"item": [
								{
									"name": "{playlist id}",
									"item": [
										{
											"name": "Get Playlists by ID",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists",
														":playlist_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "playlist_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud playlist ID, or multiple playlist ids separated by commas."
														}
													]
												},
												"description": "Gets one or more playlist objects for the account "
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud playlist ID, or multiple playlist ids separated by commas."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"account_id\": \"do dolor esse ullamco\",\n  \"created_at\": \"1976-03-10T09:38:12.590Z\",\n  \"description\": \"Sea bird playlist\",\n  \"favorite\": false,\n  \"id\": \"reprehenderit dolore consequat\",\n  \"name\": \"Sea Birds\",\n  \"reference_id\": \"sea_birds_playlist\",\n  \"search\": \"+tags:captions,training\",\n  \"state\": \"UPDATING\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"updated_at\": \"1960-04-25T16:07:56.373Z\",\n  \"video_ids\": [\n    \"4084164751001\",\n    \"1532562858001\",\n    \"734484322001\",\n    \"1532530235001\",\n    \"734462570001\",\n    \"734462569001\",\n    \"734451481001\",\n    \"734445537001\"\n  ]\n}"
												},
												{
													"name": "'INVALID_SORT: sort parameter specified and invalid field\nINVALID_SEARCH: search string invalid (may not have been URI-encoded)'",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud playlist ID, or multiple playlist ids separated by commas."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud playlist ID, or multiple playlist ids separated by commas."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud playlist ID, or multiple playlist ids separated by commas."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud playlist ID, or multiple playlist ids separated by commas."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud playlist ID, or multiple playlist ids separated by commas."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update Playlist",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists",
														":playlist_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "playlist_id",
															"value": "officia laborum",
															"description": "(Required) Playlist ID."
														}
													]
												},
												"description": "Updates a playlist for the account "
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"account_id\": \"do dolor esse ullamco\",\n  \"created_at\": \"1976-03-10T09:38:12.590Z\",\n  \"description\": \"Sea bird playlist\",\n  \"favorite\": false,\n  \"id\": \"reprehenderit dolore consequat\",\n  \"name\": \"Sea Birds\",\n  \"reference_id\": \"sea_birds_playlist\",\n  \"search\": \"+tags:captions,training\",\n  \"state\": \"UPDATING\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"updated_at\": \"1960-04-25T16:07:56.373Z\",\n  \"video_ids\": [\n    \"4084164751001\",\n    \"1532562858001\",\n    \"734484322001\",\n    \"1532530235001\",\n    \"734462570001\",\n    \"734462569001\",\n    \"734451481001\",\n    \"734445537001\"\n  ]\n}"
												},
												{
													"name": "BAD_VALUE: The JSON could not be parsed ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "ILLEGAL_FIELD: Spelling error or use of non-existent field ",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
													"code": 422,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Playlist",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists",
														":playlist_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "playlist_id",
															"value": "officia laborum",
															"description": "(Required) Playlist ID."
														}
													]
												},
												"description": "Deletes a playlist "
											},
											"response": [
												{
													"name": "NO_CONTENT",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "'INVALID_SORT: sort parameter specified and invalid field\nINVALID_SEARCH: search string invalid (may not have been URI-encoded)'",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get Videos in Playlist",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id/videos?include_details=true&limit=20&offset=20",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists",
														":playlist_id",
														"videos"
													],
													"query": [
														{
															"key": "include_details",
															"value": "true",
															"description": "When it's false, api call response won't include caption info in [text_tracks] at all and it makes the response returns quicker."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Number of items to return - see [Get videos in a playlist](/cms/managing-videos/managing-playlists-using-cms-api.html#get_count_of_videos) for more information"
														},
														{
															"key": "offset",
															"value": "20",
															"description": "Number of items to skip - see [Paging Search Results](/cms/searching/using-cms-api-page-search-results.html) for more information"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "playlist_id",
															"value": "officia laborum",
															"description": "(Required) Playlist ID."
														}
													]
												},
												"description": "Gets the video objects for videos in a playlist for the account "
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id/videos?include_details=true&limit=20&offset=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id",
																"videos"
															],
															"query": [
																{
																	"key": "include_details",
																	"value": "true"
																},
																{
																	"key": "limit",
																	"value": "20"
																},
																{
																	"key": "offset",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n    \"clip_source_video_id\": \"proident\",\n    \"complete\": true,\n    \"created_at\": \"2015-09-17T16:08:37.108Z\",\n    \"created_by\": {\n      \"email\": \"dolor qui Ut consequat\",\n      \"id\": \"ullamco cupidatat eiusmod Lorem\",\n      \"type\": \"api_key\"\n    },\n    \"cue_points\": [\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"custom_fields\": {\n      \"est70f\": \"id deserunt voluptate\"\n    },\n    \"delivery_type\": \"dynamic_origin\",\n    \"description\": \"Herring gull on a wharf in Boston\",\n    \"digital_master_id\": \"in tempor veniam irure\",\n    \"drm_disabled\": true,\n    \"duration\": 18160,\n    \"economics\": \"AD_SUPPORTED\",\n    \"folder_id\": \"560039e5e4b0e69e4b01cacd\",\n    \"forensic_watermarking\": \"ACTIVE\",\n    \"geo\": {\n      \"countries\": [\n        \"us\",\n        \"ca\",\n        \"fr\"\n      ],\n      \"exclude_countries\": false,\n      \"restricted\": true\n    },\n    \"has_digital_master\": true,\n    \"id\": \"dolor dolore eu t\",\n    \"images\": {\n      \"thumbnail\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n            \"height\": 90,\n            \"width\": 160\n          }\n        ]\n      },\n      \"poster\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n            \"height\": 720,\n            \"width\": 1280\n          }\n        ]\n      },\n      \"portrait.es\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n            \"height\": 1200,\n            \"width\": 800\n          }\n        ]\n      },\n      \"thumbnail.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n            \"height\": 108,\n            \"width\": 292\n          }\n        ]\n      },\n      \"poster.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n            \"height\": 1080,\n            \"width\": 1920\n          }\n        ]\n      },\n      \"square.de\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n            \"height\": 570,\n            \"width\": 570\n          }\n        ]\n      },\n      \"ultra-wide.hi\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n            \"height\": 1646,\n            \"width\": 3840\n          }\n        ]\n      },\n      \"wide.fr\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n            \"height\": 1440,\n            \"width\": 2560\n          }\n        ]\n      }\n    },\n    \"labels\": [\n      \"adipisicing quis minim consectetur\",\n      \"ex mollit officia\"\n    ],\n    \"link\": {\n      \"text\": \"ex id dolore aliquip\",\n      \"url\": \"dolore magna ut\"\n    },\n    \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n    \"name\": \"Laughing Gull\",\n    \"offline_enabled\": true,\n    \"original_filename\": \"gull-boston.mov\",\n    \"playback_rights_id\": \"enim\",\n    \"projection\": \"equirectangular\",\n    \"published_at\": \"deserunt lab\",\n    \"reference_id\": \"laughing_gull_2019_04_25\",\n    \"schedule\": {\n      \"ends_at\": \"nulla\",\n      \"starts_at\": \"amet laborum fugiat in\"\n    },\n    \"sharing\": {\n      \"by_external_acct\": true,\n      \"by_id\": \"ullamco o\",\n      \"by_reference\": true,\n      \"source_id\": \"in amet\",\n      \"to_external_acct\": true\n    },\n    \"state\": \"ACTIVE\",\n    \"tags\": [\n      \"birds\",\n      \"sea\"\n    ],\n    \"text_tracks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"transcripts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"updated_at\": \"sit adipisicing Lorem est amet\",\n    \"updated_by\": {\n      \"email\": \"anim adipisicing Excepteur non\",\n      \"id\": \"pariatur irure consectetur sit\",\n      \"type\": \"internal\"\n    },\n    \"variants\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  {\n    \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n    \"clip_source_video_id\": \"proident consequat ea\",\n    \"complete\": true,\n    \"created_at\": \"2015-09-17T16:08:37.108Z\",\n    \"created_by\": {\n      \"email\": \"sed ipsum\",\n      \"id\": \"aliqua labore\",\n      \"type\": \"user\"\n    },\n    \"cue_points\": [\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"custom_fields\": {\n      \"minim_a20\": \"voluptate\"\n    },\n    \"delivery_type\": \"dynamic_origin\",\n    \"description\": \"Herring gull on a wharf in Boston\",\n    \"digital_master_id\": \"eiusmod in laboris\",\n    \"drm_disabled\": true,\n    \"duration\": 18160,\n    \"economics\": \"AD_SUPPORTED\",\n    \"folder_id\": \"560039e5e4b0e69e4b01cacd\",\n    \"forensic_watermarking\": \"ACTIVE\",\n    \"geo\": {\n      \"countries\": [\n        \"us\",\n        \"ca\",\n        \"fr\"\n      ],\n      \"exclude_countries\": false,\n      \"restricted\": true\n    },\n    \"has_digital_master\": true,\n    \"id\": \"esse cillum tempor qui\",\n    \"images\": {\n      \"thumbnail\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n            \"height\": 90,\n            \"width\": 160\n          }\n        ]\n      },\n      \"poster\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n            \"height\": 720,\n            \"width\": 1280\n          }\n        ]\n      },\n      \"portrait.es\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n            \"height\": 1200,\n            \"width\": 800\n          }\n        ]\n      },\n      \"thumbnail.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n            \"height\": 108,\n            \"width\": 292\n          }\n        ]\n      },\n      \"poster.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n            \"height\": 1080,\n            \"width\": 1920\n          }\n        ]\n      },\n      \"square.de\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n            \"height\": 570,\n            \"width\": 570\n          }\n        ]\n      },\n      \"ultra-wide.hi\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n            \"height\": 1646,\n            \"width\": 3840\n          }\n        ]\n      },\n      \"wide.fr\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n            \"height\": 1440,\n            \"width\": 2560\n          }\n        ]\n      }\n    },\n    \"labels\": [\n      \"aliqua\",\n      \"officia non ad do ullamco\"\n    ],\n    \"link\": {\n      \"text\": \"exercitation dolor aute Excepteur\",\n      \"url\": \"irure Duis\"\n    },\n    \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n    \"name\": \"Laughing Gull\",\n    \"offline_enabled\": true,\n    \"original_filename\": \"gull-boston.mov\",\n    \"playback_rights_id\": \"in Excepteur aliquip dolore\",\n    \"projection\": \"equirectangular\",\n    \"published_at\": \"aute reprehenderit amet occaecat\",\n    \"reference_id\": \"laughing_gull_2019_04_25\",\n    \"schedule\": {\n      \"ends_at\": \"ad consectetur\",\n      \"starts_at\": \"adipisicing do id\"\n    },\n    \"sharing\": {\n      \"by_external_acct\": true,\n      \"by_id\": \"velit dolor nisi ea esse\",\n      \"by_reference\": true,\n      \"source_id\": \"minim qui\",\n      \"to_external_acct\": true\n    },\n    \"state\": \"ACTIVE\",\n    \"tags\": [\n      \"birds\",\n      \"sea\"\n    ],\n    \"text_tracks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"transcripts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"updated_at\": \"labore quis cillum aliqua\",\n    \"updated_by\": {\n      \"email\": \"nostrud aliquip eu\",\n      \"id\": \"dolor Lorem laborum amet elit\",\n      \"type\": \"api_key\"\n    },\n    \"variants\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n]"
												},
												{
													"name": "'INVALID_SORT: sort parameter specified and invalid field\nINVALID_SEARCH: search string invalid (may not have been URI-encoded)'",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id/videos?include_details=true&limit=20&offset=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id",
																"videos"
															],
															"query": [
																{
																	"key": "include_details",
																	"value": "true"
																},
																{
																	"key": "limit",
																	"value": "20"
																},
																{
																	"key": "offset",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id/videos?include_details=true&limit=20&offset=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id",
																"videos"
															],
															"query": [
																{
																	"key": "include_details",
																	"value": "true"
																},
																{
																	"key": "limit",
																	"value": "20"
																},
																{
																	"key": "offset",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id/videos?include_details=true&limit=20&offset=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id",
																"videos"
															],
															"query": [
																{
																	"key": "include_details",
																	"value": "true"
																},
																{
																	"key": "limit",
																	"value": "20"
																},
																{
																	"key": "offset",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id/videos?include_details=true&limit=20&offset=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id",
																"videos"
															],
															"query": [
																{
																	"key": "include_details",
																	"value": "true"
																},
																{
																	"key": "limit",
																	"value": "20"
																},
																{
																	"key": "offset",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists/:playlist_id/videos?include_details=true&limit=20&offset=20",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"playlists",
																":playlist_id",
																"videos"
															],
															"query": [
																{
																	"key": "include_details",
																	"value": "true"
																},
																{
																	"key": "limit",
																	"value": "20"
																},
																{
																	"key": "offset",
																	"value": "20"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "playlist_id",
																	"value": "officia laborum",
																	"description": "(Required) Playlist ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Playlists",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists?limit=20&offset=20&sort=name&q=name:%28Really%20Short%20Videos%29%20type:EXPLICIT",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"playlists"
											],
											"query": [
												{
													"key": "limit",
													"value": "20",
													"description": "Number of items to return - see [Paging Search Results](/cms/searching/using-cms-api-page-search-results.html) for more information"
												},
												{
													"key": "offset",
													"value": "20",
													"description": "Number of items to skip - see [Paging Search Results](/cms/searching/using-cms-api-page-search-results.html) for more information"
												},
												{
													"key": "sort",
													"value": "name",
													"description": "Field to sort results by - if absent and there is a search string, results are sorted by relevance or if there is no search string, results are sorted by `-updated_at` - note: to sort in descending order, preface the field name with a minus(`-`) sign. If the `q=` param is missing, the `sort` param will be ignored. Also if `sort` is set to an unsupported field, the request will fail with an error"
												},
												{
													"key": "q",
													"value": "name:%28Really%20Short%20Videos%29%20type:EXPLICIT",
													"description": "Search string - see [playlist search guide](/cms/searching/cms-api-playlists-search.html) for details"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Gets a page of playlist objects for the account "
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists?limit=20&offset=20&sort=name&q=name:%28Really%20Short%20Videos%29%20type:EXPLICIT",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "name"
														},
														{
															"key": "q",
															"value": "name:%28Really%20Short%20Videos%29%20type:EXPLICIT"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"account_id\": \"qui laborum amet exercitation\",\n    \"created_at\": \"1996-01-17T11:13:43.342Z\",\n    \"description\": \"Sea bird playlist\",\n    \"favorite\": false,\n    \"id\": \"Excepteur id ullamco\",\n    \"name\": \"Sea Birds\",\n    \"reference_id\": \"sea_birds_playlist\",\n    \"search\": \"+tags:captions,training\",\n    \"state\": \"UPDATING\",\n    \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n    \"updated_at\": \"2003-11-03T17:21:48.464Z\",\n    \"video_ids\": [\n      \"4084164751001\",\n      \"1532562858001\",\n      \"734484322001\",\n      \"1532530235001\",\n      \"734462570001\",\n      \"734462569001\",\n      \"734451481001\",\n      \"734445537001\"\n    ]\n  },\n  {\n    \"account_id\": \"dolore eu quis\",\n    \"created_at\": \"2010-07-23T19:29:34.097Z\",\n    \"description\": \"Sea bird playlist\",\n    \"favorite\": false,\n    \"id\": \"nulla in\",\n    \"name\": \"Sea Birds\",\n    \"reference_id\": \"sea_birds_playlist\",\n    \"search\": \"+tags:captions,training\",\n    \"state\": \"READY\",\n    \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n    \"updated_at\": \"1990-01-14T01:00:05.886Z\",\n    \"video_ids\": [\n      \"4084164751001\",\n      \"1532562858001\",\n      \"734484322001\",\n      \"1532530235001\",\n      \"734462570001\",\n      \"734462569001\",\n      \"734451481001\",\n      \"734445537001\"\n    ]\n  }\n]"
										},
										{
											"name": "'INVALID_SORT: sort parameter specified and invalid field\nINVALID_SEARCH: search string invalid (may not have been URI-encoded)'",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists?limit=20&offset=20&sort=name&q=name:%28Really%20Short%20Videos%29%20type:EXPLICIT",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "name"
														},
														{
															"key": "q",
															"value": "name:%28Really%20Short%20Videos%29%20type:EXPLICIT"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNAUTHORIZED: Authentication failed - check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists?limit=20&offset=20&sort=name&q=name:%28Really%20Short%20Videos%29%20type:EXPLICIT",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "name"
														},
														{
															"key": "q",
															"value": "name:%28Really%20Short%20Videos%29%20type:EXPLICIT"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists?limit=20&offset=20&sort=name&q=name:%28Really%20Short%20Videos%29%20type:EXPLICIT",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "name"
														},
														{
															"key": "q",
															"value": "name:%28Really%20Short%20Videos%29%20type:EXPLICIT"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists?limit=20&offset=20&sort=name&q=name:%28Really%20Short%20Videos%29%20type:EXPLICIT",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "name"
														},
														{
															"key": "q",
															"value": "name:%28Really%20Short%20Videos%29%20type:EXPLICIT"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists?limit=20&offset=20&sort=name&q=name:%28Really%20Short%20Videos%29%20type:EXPLICIT",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"query": [
														{
															"key": "limit",
															"value": "20"
														},
														{
															"key": "offset",
															"value": "20"
														},
														{
															"key": "sort",
															"value": "name"
														},
														{
															"key": "q",
															"value": "name:%28Really%20Short%20Videos%29%20type:EXPLICIT"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Playlist",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"playlists"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Creates a new playlist.\n\n**A maximum of 1000 videos can be added to a playlist** (both Manual and Smart). There is no limit to the number of playlists that can be created. The videos that are initially loaded into a playlist in the player is determined by the type of playlist."
									},
									"response": [
										{
											"name": "Playlist created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account_id\": \"do dolor esse ullamco\",\n  \"created_at\": \"1976-03-10T09:38:12.590Z\",\n  \"description\": \"Sea bird playlist\",\n  \"favorite\": false,\n  \"id\": \"reprehenderit dolore consequat\",\n  \"name\": \"Sea Birds\",\n  \"reference_id\": \"sea_birds_playlist\",\n  \"search\": \"+tags:captions,training\",\n  \"state\": \"UPDATING\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"updated_at\": \"1960-04-25T16:07:56.373Z\",\n  \"video_ids\": [\n    \"4084164751001\",\n    \"1532562858001\",\n    \"734484322001\",\n    \"1532530235001\",\n    \"734462570001\",\n    \"734462569001\",\n    \"734451481001\",\n    \"734445537001\"\n  ]\n}"
										},
										{
											"name": "BAD_VALUE: The JSON could not be parsed ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "REFERENCE_ID_IN_USE: The specified reference id is already in use ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "ILLEGAL_FIELD: Spelling error or use of non-existent field ",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"My new sea playlist\",\n  \"name\": \"Sea Videos\",\n  \"type\": \"ACTIVATED_NEWEST_TO_OLDEST\",\n  \"limit\": 20,\n  \"search\": \"tags:birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"playlists"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "folders",
							"item": [
								{
									"name": "{folder id}",
									"item": [
										{
											"name": "videos",
											"item": [
												{
													"name": "{video id}",
													"item": [
														{
															"name": "Add Video to Folder",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"folders",
																		":folder_id",
																		"videos",
																		":video_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) Folder ID."
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																		}
																	]
																},
																"description": "Add a video to a folder "
															},
															"response": [
																{
																	"name": "NO_CONTENT",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) Folder ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) Folder ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) Folder ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) Folder ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) Folder ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) Folder ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) Folder ID."
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Remove Video from Folder",
															"request": {
																"auth": {
																	"type": "oauth2",
																	"oauth2": [
																		{
																			"key": "scope",
																			"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																			"type": "string"
																		},
																		{
																			"key": "accessTokenUrl",
																			"value": "https://oauth.brightcove.com/v4/access_token",
																			"type": "string"
																		},
																		{
																			"key": "grant_type",
																			"value": "client_credentials",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"folders",
																		":folder_id",
																		"videos",
																		":video_id"
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) the folder ID"
																		},
																		{
																			"key": "video_id",
																			"value": "officia laborum",
																			"description": "(Required) the video ID"
																		}
																	]
																},
																"description": "Remove a video from a folder "
															},
															"response": [
																{
																	"name": "Video successfully removed from the folder",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) the folder ID"
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) the video ID"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) the folder ID"
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) the video ID"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) the folder ID"
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) the video ID"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) the folder ID"
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) the video ID"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) the folder ID"
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) the video ID"
																				}
																			]
																		}
																	},
																	"status": "Method Not Allowed",
																	"code": 405,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) the folder ID"
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) the video ID"
																				}
																			]
																		}
																	},
																	"status": "Too Many Requests",
																	"code": 429,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: oauth2",
																				"key": "Authorization",
																				"value": "<token>"
																			},
																			{
																				"description": "(Required) Content-Type: application/json",
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																				"key": "Authorization",
																				"value": "officia laborum"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos/:video_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v1",
																				"accounts",
																				":account_id",
																				"folders",
																				":folder_id",
																				"videos",
																				":video_id"
																			],
																			"variable": [
																				{
																					"key": "account_id",
																					"value": "officia laborum",
																					"description": "(Required) Video Cloud account ID."
																				},
																				{
																					"key": "folder_id",
																					"value": "officia laborum",
																					"description": "(Required) the folder ID"
																				},
																				{
																					"key": "video_id",
																					"value": "officia laborum",
																					"description": "(Required) the video ID"
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Get Videos in Folder",
													"request": {
														"auth": {
															"type": "oauth2",
															"oauth2": [
																{
																	"key": "scope",
																	"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
																	"type": "string"
																},
																{
																	"key": "accessTokenUrl",
																	"value": "https://oauth.brightcove.com/v4/access_token",
																	"type": "string"
																},
																{
																	"key": "grant_type",
																	"value": "client_credentials",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos?limit=20&offset=20&sort=created_at",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id",
																"videos"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Number of items to return - see [Paging Search Results](/cms/searching/using-cms-api-page-search-results.html) for more information"
																},
																{
																	"key": "offset",
																	"value": "20",
																	"description": "Number of items to skip - see [Paging Search Results](/cms/searching/using-cms-api-page-search-results.html) for more information"
																},
																{
																	"key": "sort",
																	"value": "created_at",
																	"description": "Field to sort results by - if absent and there is a search string, results are sorted by relevance or if there is no search string, results are sorted by `-updated_at`. \nNotes: \n  - to sort in descending order, preface the field name with a minus (`-`) sign\n  - this parameter can be used to sort results both for a get videos request and for a get videos in folder request"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID."
																}
															]
														},
														"description": "Gets list of video objects in a folder "
													},
													"response": [
														{
															"name": "Videos in the folder",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos?limit=20&offset=20&sort=created_at",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"folders",
																		":folder_id",
																		"videos"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20"
																		},
																		{
																			"key": "offset",
																			"value": "20"
																		},
																		{
																			"key": "sort",
																			"value": "created_at"
																		}
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) the folder ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n    \"clip_source_video_id\": \"minim in ex enim\",\n    \"complete\": true,\n    \"created_at\": \"2015-09-17T16:08:37.108Z\",\n    \"created_by\": {\n      \"email\": \"velit sint aliqua quis ipsum\",\n      \"id\": \"Lorem velit est Duis\",\n      \"type\": \"api_key\"\n    },\n    \"cue_points\": [\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"custom_fields\": {\n      \"aliqua58\": \"laborum voluptate ea\",\n      \"dolorebad\": \"qui sed aliqua\",\n      \"do_77\": \"in sunt ea\",\n      \"mollitba1\": \"ipsum ad\"\n    },\n    \"delivery_type\": \"dynamic_origin\",\n    \"description\": \"Herring gull on a wharf in Boston\",\n    \"digital_master_id\": \"nisi sit ut\",\n    \"drm_disabled\": true,\n    \"duration\": 18160,\n    \"economics\": \"AD_SUPPORTED\",\n    \"folder_id\": \"560039e5e4b0e69e4b01cacd\",\n    \"forensic_watermarking\": \"ACTIVE\",\n    \"geo\": {\n      \"countries\": [\n        \"us\",\n        \"ca\",\n        \"fr\"\n      ],\n      \"exclude_countries\": true,\n      \"restricted\": true\n    },\n    \"has_digital_master\": true,\n    \"id\": \"proident Lorem\",\n    \"images\": {\n      \"thumbnail\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n            \"height\": 90,\n            \"width\": 160\n          }\n        ]\n      },\n      \"poster\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n            \"height\": 720,\n            \"width\": 1280\n          }\n        ]\n      },\n      \"portrait.es\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n            \"height\": 1200,\n            \"width\": 800\n          }\n        ]\n      },\n      \"thumbnail.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n            \"height\": 108,\n            \"width\": 292\n          }\n        ]\n      },\n      \"poster.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n            \"height\": 1080,\n            \"width\": 1920\n          }\n        ]\n      },\n      \"square.de\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n            \"height\": 570,\n            \"width\": 570\n          }\n        ]\n      },\n      \"ultra-wide.hi\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n            \"height\": 1646,\n            \"width\": 3840\n          }\n        ]\n      },\n      \"wide.fr\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n            \"height\": 1440,\n            \"width\": 2560\n          }\n        ]\n      }\n    },\n    \"labels\": [\n      \"mollit\",\n      \"fugiat in adipisicing nisi\"\n    ],\n    \"link\": {\n      \"text\": \"aute aliquip laboris\",\n      \"url\": \"consectetur et sed laborum\"\n    },\n    \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n    \"name\": \"Laughing Gull\",\n    \"offline_enabled\": true,\n    \"original_filename\": \"gull-boston.mov\",\n    \"playback_rights_id\": \"dolor sint et\",\n    \"projection\": \"equirectangular\",\n    \"published_at\": \"do ut laborum\",\n    \"reference_id\": \"laughing_gull_2019_04_25\",\n    \"schedule\": {\n      \"ends_at\": \"elit occaecat irure cupidatat\",\n      \"starts_at\": \"in adipisicing dolore cillum deserunt\"\n    },\n    \"sharing\": {\n      \"by_external_acct\": true,\n      \"by_id\": \"irure incididunt quis sint\",\n      \"by_reference\": true,\n      \"source_id\": \"ut veniam consectetu\",\n      \"to_external_acct\": true\n    },\n    \"state\": \"ACTIVE\",\n    \"tags\": [\n      \"birds\",\n      \"sea\"\n    ],\n    \"text_tracks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"transcripts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"updated_at\": \"exercitat\",\n    \"updated_by\": {\n      \"email\": \"eu aliqua sed culpa\",\n      \"id\": \"anim commodo ut in\",\n      \"type\": \"api_key\"\n    },\n    \"variants\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  {\n    \"ad_keys\": \" \\\"adKeys\\\": \\\"category=sports&live=true\\\"\",\n    \"clip_source_video_id\": \"ullamco deserunt est\",\n    \"complete\": true,\n    \"created_at\": \"2015-09-17T16:08:37.108Z\",\n    \"created_by\": {\n      \"email\": \"do ut enim quis\",\n      \"id\": \"sed\",\n      \"type\": \"user\"\n    },\n    \"cue_points\": [\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"time\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"type\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"metadata\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"custom_fields\": {\n      \"elit_8\": \"laboru\"\n    },\n    \"delivery_type\": \"dynamic_origin\",\n    \"description\": \"Herring gull on a wharf in Boston\",\n    \"digital_master_id\": \"esse ut in qui\",\n    \"drm_disabled\": true,\n    \"duration\": 18160,\n    \"economics\": \"AD_SUPPORTED\",\n    \"folder_id\": \"560039e5e4b0e69e4b01cacd\",\n    \"forensic_watermarking\": \"ACTIVE\",\n    \"geo\": {\n      \"countries\": [\n        \"us\",\n        \"ca\",\n        \"fr\"\n      ],\n      \"exclude_countries\": false,\n      \"restricted\": true\n    },\n    \"has_digital_master\": true,\n    \"id\": \"dolore elit\",\n    \"images\": {\n      \"thumbnail\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/160x90/20s629ms/match/image.jpg\",\n            \"height\": 90,\n            \"width\": 160\n          }\n        ]\n      },\n      \"poster\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/jit/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/main/1280x720/20s629ms/match/image.jpg\",\n            \"height\": 720,\n            \"width\": 1280\n          }\n        ]\n      },\n      \"portrait.es\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/bac8717a-43db-4fa8-a6f0-189c80ee4c4e/800x1200/match/image.jpg\",\n            \"height\": 1200,\n            \"width\": 800\n          }\n        ]\n      },\n      \"thumbnail.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/0ce2da4d-ca36-469b-9024-0273d79feeeb/292x108/match/image.jpg\",\n            \"height\": 108,\n            \"width\": 292\n          }\n        ]\n      },\n      \"poster.en\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/a7cb150d-c84a-48e0-9469-5b4ce80fba53/1920x1080/match/image.jpg\",\n            \"height\": 1080,\n            \"width\": 1920\n          }\n        ]\n      },\n      \"square.de\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/22209955-e136-4f17-914c-e19ec4c58886/570x570/match/image.jpg\",\n            \"height\": 570,\n            \"width\": 570\n          }\n        ]\n      },\n      \"ultra-wide.hi\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/72fd489f-d978-44ba-8d04-1e33c7c36cef/3840x1646/match/image.jpg\",\n            \"height\": 1646,\n            \"width\": 3840\n          }\n        ]\n      },\n      \"wide.fr\": {\n        \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n        \"sources\": [\n          {\n            \"src\": \"https://cf-images.us-east-1.prod.boltdns.net/v1/static/57838016001/ee705e97-3fb5-409c-99d8-703e9f57bd0a/4405a5d5-8b9e-4c2b-be71-cf4e2c153e87/2560x1440/match/image.jpg\",\n            \"height\": 1440,\n            \"width\": 2560\n          }\n        ]\n      }\n    },\n    \"labels\": [\n      \"cupidatat sunt\",\n      \"ut Ut\"\n    ],\n    \"link\": {\n      \"text\": \"dolore\",\n      \"url\": \"non cillum fugia\"\n    },\n    \"long_description\": \"Herring Gull near Fort Point Channel in Boston, MA, USA. 2019-04-25.\",\n    \"name\": \"Laughing Gull\",\n    \"offline_enabled\": true,\n    \"original_filename\": \"gull-boston.mov\",\n    \"playback_rights_id\": \"cupidatat\",\n    \"projection\": \"equirectangular\",\n    \"published_at\": \"labore consequat\",\n    \"reference_id\": \"laughing_gull_2019_04_25\",\n    \"schedule\": {\n      \"ends_at\": \"tempor ad non in\",\n      \"starts_at\": \"et in aliqua sit\"\n    },\n    \"sharing\": {\n      \"by_external_acct\": true,\n      \"by_id\": \"quis enim reprehenderit occaecat\",\n      \"by_reference\": true,\n      \"source_id\": \"magna dolore aliquip id\",\n      \"to_external_acct\": true\n    },\n    \"state\": \"ACTIVE\",\n    \"tags\": [\n      \"birds\",\n      \"sea\"\n    ],\n    \"text_tracks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"transcripts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"updated_at\": \"in veni\",\n    \"updated_by\": {\n      \"email\": \"Ut adipisicing commodo Lorem\",\n      \"id\": \"fugiat pariatur sit ea\",\n      \"type\": \"user\"\n    },\n    \"variants\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n]"
														},
														{
															"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos?limit=20&offset=20&sort=created_at",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"folders",
																		":folder_id",
																		"videos"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20"
																		},
																		{
																			"key": "offset",
																			"value": "20"
																		},
																		{
																			"key": "sort",
																			"value": "created_at"
																		}
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) the folder ID."
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos?limit=20&offset=20&sort=created_at",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"folders",
																		":folder_id",
																		"videos"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20"
																		},
																		{
																			"key": "offset",
																			"value": "20"
																		},
																		{
																			"key": "sort",
																			"value": "created_at"
																		}
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) the folder ID."
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos?limit=20&offset=20&sort=created_at",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"folders",
																		":folder_id",
																		"videos"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20"
																		},
																		{
																			"key": "offset",
																			"value": "20"
																		},
																		{
																			"key": "sort",
																			"value": "created_at"
																		}
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) the folder ID."
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos?limit=20&offset=20&sort=created_at",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"folders",
																		":folder_id",
																		"videos"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20"
																		},
																		{
																			"key": "offset",
																			"value": "20"
																		},
																		{
																			"key": "sort",
																			"value": "created_at"
																		}
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) the folder ID."
																		}
																	]
																}
															},
															"status": "Method Not Allowed",
															"code": 405,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos?limit=20&offset=20&sort=created_at",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"folders",
																		":folder_id",
																		"videos"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20"
																		},
																		{
																			"key": "offset",
																			"value": "20"
																		},
																		{
																			"key": "sort",
																			"value": "created_at"
																		}
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) the folder ID."
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: oauth2",
																		"key": "Authorization",
																		"value": "<token>"
																	},
																	{
																		"description": "(Required) Content-Type: application/json",
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																		"key": "Authorization",
																		"value": "officia laborum"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id/videos?limit=20&offset=20&sort=created_at",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"accounts",
																		":account_id",
																		"folders",
																		":folder_id",
																		"videos"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20"
																		},
																		{
																			"key": "offset",
																			"value": "20"
																		},
																		{
																			"key": "sort",
																			"value": "created_at"
																		}
																	],
																	"variable": [
																		{
																			"key": "account_id",
																			"value": "officia laborum",
																			"description": "(Required) Video Cloud account ID."
																		},
																		{
																			"key": "folder_id",
																			"value": "officia laborum",
																			"description": "(Required) the folder ID."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Get Folder Information",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders",
														":folder_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "folder_id",
															"value": "officia laborum",
															"description": "(Required) Folder ID."
														}
													]
												},
												"description": "Gets information about a folder "
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) Folder ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"account_id\": \"magna non culpa\",\n    \"created_at\": \"quis ut in\",\n    \"id\": \"5a17275782aca45b631295f9\",\n    \"name\": \"birds\",\n    \"updated_at\": \"cupidatat irure\",\n    \"video_count\": \"nostrud exercitation Ut do minim\"\n  },\n  {\n    \"account_id\": \"tempor nostrud id dolore\",\n    \"created_at\": \"sed Lorem ullamco\",\n    \"id\": \"5a17275782aca45b631295f9\",\n    \"name\": \"birds\",\n    \"updated_at\": \"adipisicing\",\n    \"video_count\": \"in enim do\"\n  }\n]"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) Folder ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) Folder ID."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) Folder ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) Folder ID."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) Folder ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) Folder ID."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update Folder Name",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders",
														":folder_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "folder_id",
															"value": "officia laborum",
															"description": "(Required) the folder ID"
														}
													]
												},
												"description": "Update the folder name "
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"account_id\": \"ullamco in veniam\",\n  \"created_at\": \"qui ullamco\",\n  \"id\": \"5a17275782aca45b631295f9\",\n  \"name\": \"birds\",\n  \"updated_at\": \"id reprehenderit in cillum ut\",\n  \"video_count\": \"magna ullamco consequat commodo in\"\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Folder",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id?name=officia laborum",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders",
														":folder_id"
													],
													"query": [
														{
															"key": "name",
															"value": "officia laborum",
															"description": "(Required) name of the folder (must be unique in the account)"
														}
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "folder_id",
															"value": "officia laborum",
															"description": "(Required) the folder ID"
														}
													]
												},
												"description": "Delete a folder "
											},
											"response": [
												{
													"name": "201",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id?name=officia laborum",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"query": [
																{
																	"key": "name",
																	"value": "officia laborum"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id?name=officia laborum",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"query": [
																{
																	"key": "name",
																	"value": "officia laborum"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id?name=officia laborum",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"query": [
																{
																	"key": "name",
																	"value": "officia laborum"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id?name=officia laborum",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"query": [
																{
																	"key": "name",
																	"value": "officia laborum"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id?name=officia laborum",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"query": [
																{
																	"key": "name",
																	"value": "officia laborum"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id?name=officia laborum",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"query": [
																{
																	"key": "name",
																	"value": "officia laborum"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/folders/:folder_id?name=officia laborum",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"folders",
																":folder_id"
															],
															"query": [
																{
																	"key": "name",
																	"value": "officia laborum"
																}
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "folder_id",
																	"value": "officia laborum",
																	"description": "(Required) the folder ID"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Folders",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"folders"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Gets list of folders for the account "
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account_id\": \"ullamco in veniam\",\n  \"created_at\": \"qui ullamco\",\n  \"id\": \"5a17275782aca45b631295f9\",\n  \"name\": \"birds\",\n  \"updated_at\": \"id reprehenderit in cillum ut\",\n  \"video_count\": \"magna ullamco consequat commodo in\"\n}"
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Folder",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"birds\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"folders"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Create a new folder for the account - **note** that there is a limit of 1000 folders per account"
									},
									"response": [
										{
											"name": "Folder created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account_id\": \"ullamco in veniam\",\n  \"created_at\": \"qui ullamco\",\n  \"id\": \"5a17275782aca45b631295f9\",\n  \"name\": \"birds\",\n  \"updated_at\": \"id reprehenderit in cillum ut\",\n  \"video_count\": \"magna ullamco consequat commodo in\"\n}"
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "MAXIMUM_FOLDER_COUNT_REACHED: You have exceeded the maximum number of folders",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/folders",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"folders"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "labels",
							"item": [
								{
									"name": "by path/:label path",
									"item": [
										{
											"name": "Update a Label",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"new_label\": \"forest_birds\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels",
														"by_path",
														":label_path"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "label_path",
															"value": "officia laborum",
															"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
														}
													]
												},
												"description": "Update a label for the account"
											},
											"response": [
												{
													"name": "Label updated",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"new_label\": \"forest_birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"path\": \"/nature/mammals/seamammals\"\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"new_label\": \"forest_birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"new_label\": \"forest_birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"new_label\": \"forest_birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"new_label\": \"forest_birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"new_label\": \"forest_birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"new_label\": \"forest_birds\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Label",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels",
														"by_path",
														":label_path"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "label_path",
															"value": "officia laborum",
															"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
														}
													]
												},
												"description": "Delete a label"
											},
											"response": [
												{
													"name": "204 No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/labels/by_path/:label_path",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"labels",
																"by_path",
																":label_path"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "label_path",
																	"value": "officia laborum",
																	"description": "(Required) 'The path for a label to update or delete. Note that the operation performed is on the last item in the path, so for example, if you specify the path `/nature/birds/seabirds`, only the `seabirds` label will be updated/deleted, but if you specify the path as `/nature/birds`, `birds` and any sub-labels of `birds` will be updated/deleted.'"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Create a Label",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"path\": \"/nature/mammals/seamammals\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"labels"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Create a new label for the account "
									},
									"response": [
										{
											"name": "Label created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"/nature/mammals/seamammals\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"path\": \"/nature/mammals/seamammals\"\n}"
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"/nature/mammals/seamammals\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"/nature/mammals/seamammals\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"/nature/mammals/seamammals\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"/nature/mammals/seamammals\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"/nature/mammals/seamammals\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"/nature/mammals/seamammals\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Labels",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"labels"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Gets list of labels for the account "
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"account_id\": \"57838016001\",\n  \"labels\": [\n    \"/nature/birds\",\n    \"/nature/birds/shorebirds\",\n    \"/nature/birds/forestbirds\",\n    \"/nature/mammals/seamammals\"\n  ],\n  \"version\": -41075082\n}"
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"labels"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "subscriptions",
							"item": [
								{
									"name": "{subscription id}",
									"item": [
										{
											"name": "Get Subscription",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "subscription_id",
															"value": "officia laborum",
															"description": "(Required) Subscription ID."
														}
													]
												},
												"description": "Get a notification subscription for the account "
											},
											"response": [
												{
													"name": "200",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ],\n  \"id\": \"a0847083-79f4-4315-8a2c-403465a3d9bc\",\n  \"service_account\": \"57838016001\"\n}"
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Subscription",
											"request": {
												"auth": {
													"type": "oauth2",
													"oauth2": [
														{
															"key": "scope",
															"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
															"type": "string"
														},
														{
															"key": "accessTokenUrl",
															"value": "https://oauth.brightcove.com/v4/access_token",
															"type": "string"
														},
														{
															"key": "grant_type",
															"value": "client_credentials",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														},
														{
															"key": "subscription_id",
															"value": "officia laborum",
															"description": "(Required) Subscription ID."
														}
													]
												},
												"description": "Delete a notification subscription for the account "
											},
											"response": [
												{
													"name": "Item was deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Method Not Allowed",
													"code": 405,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: oauth2",
																"key": "Authorization",
																"value": "<token>"
															},
															{
																"description": "(Required) Content-Type: application/json",
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
																"key": "Authorization",
																"value": "officia laborum"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions/:subscription_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"accounts",
																":account_id",
																"subscriptions",
																":subscription_id"
															],
															"variable": [
																{
																	"key": "account_id",
																	"value": "officia laborum",
																	"description": "(Required) Video Cloud account ID."
																},
																{
																	"key": "subscription_id",
																	"value": "officia laborum",
																	"description": "(Required) Subscription ID."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Subscriptions List",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"subscriptions"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Get a list of all notification subscriptions for the account "
									},
									"response": [
										{
											"name": "200",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n    \"events\": [\n      \"video-change\"\n    ],\n    \"id\": \"a0847083-79f4-4315-8a2c-403465a3d9bc\",\n    \"service_account\": \"57838016001\"\n  },\n  {\n    \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n    \"events\": [\n      \"video-change\"\n    ],\n    \"id\": \"a0847083-79f4-4315-8a2c-403465a3d9bc\",\n    \"service_account\": \"57838016001\"\n  }\n]"
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Subscription",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
													"type": "string"
												},
												{
													"key": "accessTokenUrl",
													"value": "https://oauth.brightcove.com/v4/access_token",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":account_id",
												"subscriptions"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												}
											]
										},
										"description": "Establishes up to 10 endpoints that video changes should be sent to. Any change in video metadata will trigger a video change event and a notification - changes to assets used by the video will not trigger change events."
									},
									"response": [
										{
											"name": "Subscription created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ],\n  \"id\": \"a0847083-79f4-4315-8a2c-403465a3d9bc\",\n  \"service_account\": \"57838016001\"\n}"
										},
										{
											"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unprocessable_Entity: 1) You already have a subscription for the video-change event that delivers to that address; 2) the endpoint or events field is missing from the request; 3) you already have 10 subscriptions to this event",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: oauth2",
														"key": "Authorization",
														"value": "<token>"
													},
													{
														"description": "(Required) Content-Type: application/json",
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
														"key": "Authorization",
														"value": "officia laborum"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"endpoint\": \"http://solutions.brightcove.com/bcls/di-api/cms-callbacks.php\",\n  \"events\": [\n    \"video-change\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/accounts/:account_id/subscriptions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"accounts",
														":account_id",
														"subscriptions"
													],
													"variable": [
														{
															"key": "account_id",
															"value": "officia laborum",
															"description": "(Required) Video Cloud account ID."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{account Id}",
					"item": [
						{
							"name": "Get Video with Clear Sources",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://oauth.brightcove.com/v4/access_token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/accounts/:accountId/clear_videos/:videoId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"clear_videos",
										":videoId"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "officia laborum",
											"description": "(Required) Video Cloud account ID."
										},
										{
											"key": "video_id",
											"value": "officia laborum",
											"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
										}
									]
								},
								"description": "Get video data with unencrypted sources.\n**Notes**\n  - Once the unprotected URL is made available, Brightcove and the client have no control over who has access to the content or how it is used.\n  - There will be egress bandwidth charges made to the customer when the sources are accessed."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/clear_videos/:videoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"clear_videos",
												":videoId"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"app_name\": \"voluptate ad aliquip\",\n  \"asset_id\": \"eiusmod sed amet qui\",\n  \"codec\": \"in\",\n  \"container\": \"aliqua dolore labore\",\n  \"duration\": -80215899,\n  \"encoding_rate\": -94160007,\n  \"height\": 58883044,\n  \"remote\": true,\n  \"size\": -93083643,\n  \"src\": \"dolore\",\n  \"stream_name\": \"sed laborum eiusmod ut\",\n  \"type\": \"et voluptate\",\n  \"uploaded_at\": \"adipisicing ut\",\n  \"width\": 46664525\n}"
								},
								{
									"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/clear_videos/:videoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"clear_videos",
												":videoId"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/clear_videos/:videoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"clear_videos",
												":videoId"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/clear_videos/:videoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"clear_videos",
												":videoId"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/clear_videos/:videoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"clear_videos",
												":videoId"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/clear_videos/:videoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"clear_videos",
												":videoId"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/clear_videos/:videoId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"clear_videos",
												":videoId"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Video Clear Sources",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "video-cloud/video/read video-cloud/video/create video-cloud/video/update video-cloud/video/delete video-cloud/video/all video-cloud/asset/delete video-cloud/playlist/read video-cloud/playlist/create video-cloud/playlist/update video-cloud/playlist/delete video-cloud/playlist/all video-cloud/sharing-relationships/read video-cloud/sharing-relationships/create video-cloud/sharing-relationships/update video-cloud/sharing-relationships/delete video-cloud/sharing-relationships/all video-cloud/notifications/all video-cloud/video/clear-sources",
											"type": "string"
										},
										{
											"key": "accessTokenUrl",
											"value": "https://oauth.brightcove.com/v4/access_token",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/accounts/:accountId/videos/:videoId/clear_sources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"accounts",
										":accountId",
										"videos",
										":videoId",
										"clear_sources"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "officia laborum",
											"description": "(Required) Video Cloud account ID."
										},
										{
											"key": "video_id",
											"value": "officia laborum",
											"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
										}
									]
								},
								"description": "Get unencrypted sources for a video.\n**Notes**\n  - Once the unprotected URL is made available, Brightcove and the client have no control over who has access to the content or how it is used.\n  - There will be egress bandwidth charges made to the customer when the sources are accessed.\n  - This endpoint requires the special permission `video-cloud/video/clear-sources` which is not available in the Studio UI. To generate credentials to get clear sources, this permission must be enabled for the account, and you must use the [OAuth API](/oauth/getting-started/overview-oauth-api-v4.html)"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/videos/:videoId/clear_sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"videos",
												":videoId",
												"clear_sources"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"app_name\": \"voluptate ad aliquip\",\n  \"asset_id\": \"eiusmod sed amet qui\",\n  \"codec\": \"in\",\n  \"container\": \"aliqua dolore labore\",\n  \"duration\": -80215899,\n  \"encoding_rate\": -94160007,\n  \"height\": 58883044,\n  \"remote\": true,\n  \"size\": -93083643,\n  \"src\": \"dolore\",\n  \"stream_name\": \"sed laborum eiusmod ut\",\n  \"type\": \"et voluptate\",\n  \"uploaded_at\": \"adipisicing ut\",\n  \"width\": 46664525\n}"
								},
								{
									"name": "UNAUTHORIZED: Authentication failed; check to make sure your client credentials were correct for the access token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/videos/:videoId/clear_sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"videos",
												":videoId",
												"clear_sources"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "NOT_AVAILABLE: The resource you are requesting is temporarily unavailable",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/videos/:videoId/clear_sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"videos",
												":videoId",
												"clear_sources"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "RESOURCE_NOT_FOUND: The api could not find the resource you requested",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/videos/:videoId/clear_sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"videos",
												":videoId",
												"clear_sources"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "METHOD_NOT_ALLOWED: The HTTP method specified is not allowed for this endpoint",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/videos/:videoId/clear_sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"videos",
												":videoId",
												"clear_sources"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "TOO_MANY_REQUESTS: You are submitting too many simultaneous requests or too many requests per second",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/videos/:videoId/clear_sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"videos",
												":videoId",
												"clear_sources"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "UNKNOWN: Issue in Brightcove system; try again later.\nTIMEOUT: Server likely too busy; try again later.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: oauth2",
												"key": "Authorization",
												"value": "<token>"
											},
											{
												"description": "(Required) Content-Type: application/json",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Authorization: Bearer {access_token} - see [Getting Access Tokens](/oauth/code-samples/oauth-api-sample-get-access-token.html)",
												"key": "Authorization",
												"value": "officia laborum"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/accounts/:accountId/videos/:videoId/clear_sources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"accounts",
												":accountId",
												"videos",
												":videoId",
												"clear_sources"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "officia laborum",
													"description": "(Required) Video Cloud account ID."
												},
												{
													"key": "video_id",
													"value": "officia laborum",
													"description": "(Required) Video ID (specified as `/{video_id}`) or reference id (specified as `/ref:{reference_id}`). For GET or DELETE video by id, you can use a comma-delimited list of up to 10 video ids."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "v1/player",
			"item": [
				{
					"name": "list_of_player",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let accountList = JSON.parse(pm.environment.get(\"accountListIds\"));",
									"let accountId = accountList.shift();",
									"console.log(\"REMAINING \")",
									"console.log(accountList)",
									"pm.globals.set(\"accountListIds\", JSON.stringify(accountList))",
									"pm.environment.set('accountId',accountId);",
									"",
									"/*if(accountsList.length > 0 && players && players.items && players.items.length == 0){",
									"    currentId = accountsList.shift();",
									"    pm.environment.set(\"accountId\",currentId);",
									"    pm.environment.set(\"accountListIds\",JSON.stringify(accountsList)); ",
									"",
									"} else if(accountsList.length == 0 && players && players.items && players.items.length == 0){",
									"    currentId = \"0\"",
									"    pm.environment.set(\"accountId\",currentId);",
									"    ",
									"",
									"}*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"if(pm.variables.get('accountId') !== \"undefined\"){",
									"    const newItems = {",
									"        items:[]",
									"",
									"    }",
									"const items = pm.response.json();",
									"        //[\"5736494071001\",\"4626510591001\"]",
									"",
									"const playerNameToFind = pm.variables.get('playerToFind')",
									" for(var i = 0; i<items.items.length; i++){",
									"    if(items.items[i].name.toLowerCase().indexOf(playerNameToFind) >= 0){",
									"        newItems.items.push(items.items[i]);",
									" ",
									"    }",
									" }",
									"     //newItems.items = items.items;",
									"console.log(newItems)",
									"pm.variables.set(\"players\", JSON.stringify(newItems));",
									"postman.setNextRequest(\"get_updated_config_for_player\");",
									"",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"}",
									" ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "tokenName",
									"value": "brightcovetoken",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{access_token}}",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "{{client_id}}",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{access_token_url}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "grant_type",
								"value": "client_credentials",
								"type": "text"
							},
							{
								"key": "client_id",
								"value": "{{client_id}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://players.api.brightcove.com/v2/accounts/{{accountId}}/players",
							"protocol": "https",
							"host": [
								"players",
								"api",
								"brightcove",
								"com"
							],
							"path": [
								"v2",
								"accounts",
								"{{accountId}}",
								"players"
							],
							"query": [
								{
									"key": "client_id",
									"value": "843a66f0-b33e-44c1-9015-4848ff46bb36",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get_config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(pm.globals.get('get_config'))",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*let n = 0;",
									"const token = pm.request.auth.oauth2.get('accessToken')",
									"const playerIds = pm.variables.get('playerIds');",
									"const baseUrl = pm.variables.get('baseUrl');",
									"const playerArray = []",
									"",
									"function requestConf(playerId, n){",
									"    if(n < playerIds.length){",
									"        var requestOptions = {",
									"  method: 'GET',",
									"  headers: 'Authorization Bearer '+token,",
									"};",
									"",
									"pm.sendRequest(\"https://players.api.brightcove.com/v2/accounts/4626510591001/players/\"+playerId+\"/configuration\", requestOptions,",
									"(err, response)=>{",
									"          console.log(response.text())",
									"",
									"playerArray[n] = {",
									"          playerId:playerId,",
									"          configuration:response",
									"      }",
									"      requestConf(playerIds[n+1], n++);",
									"",
									"})",
									"  ",
									"    } else {",
									"    pm.environment.set(\"playerConfig\", playerArray);",
									"    console.log('finishhh')",
									"    }",
									"",
									"}",
									"console.log(playerIds);",
									"requestConf(playerIds[0],0)",
									"",
									"",
									"const playerIds = pm.variables.get('playerIds');",
									"for(var i = 0; i<playerIds.length; i++){",
									"pm.environment.set(\"currentPlayerId\", playerIds[i]);",
									"eval(pm.globals.get('get_config'))",
									"} */"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenName",
									"value": "testtok",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "{{client_id}}",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{access_token_url}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountId}}/players/{{currentPlayerId}}/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}",
								"players",
								"{{currentPlayerId}}",
								"configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_plugins_list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountId}}/players/{{currentPlayerId}}/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}",
								"players",
								"{{currentPlayerId}}",
								"configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_config",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let config = pm.environment.get('configToUpdate');",
									"console.log(\"PATH CONFIG\");",
									"console.log(config);",
									"/*let body = {",
									"    mode: 'raw',",
									"    raw: config,",
									"    options: {",
									"        raw: {",
									"            language: 'json'",
									"        }",
									"    }",
									"}*/",
									"body = config;",
									"pm.variables.set('bodyData', body);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const players = JSON.parse(pm.variables.get(\"players\"));",
									"/*if(players && players.items.length == 0) {",
									"    let accountsList = JSON.parse(pm.environment.get('accountListIds'))",
									"",
									"    if(accountsList.length > 0){",
									"    ",
									"        postman.setNextRequest(\"list_of_player\");",
									"",
									"    }",
									"",
									"}*/",
									"console.log(\"FINE PATCH\")",
									"console.log(players);",
									"console.log(players.items.length);",
									"let currentPlayer = players.items.shift();",
									"console.log(currentPlayer.id);",
									"pm.variables.set(\"currentPlayerId\", currentPlayer.id);",
									"pm.variables.set(\"players\", JSON.stringify(players))",
									"if (players && players.items.length == 0) {",
									"",
									"",
									"    postman.setNextRequest(\"list_of_player\");",
									"}",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenName",
									"value": "brightcovetoken",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "{{client_id}}",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{access_token_url}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{bodyData}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountId}}/players/{{currentPlayerId}}/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}",
								"players",
								"{{currentPlayerId}}",
								"configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_updated_config_for_player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const items = pm.response.json();",
									"console.log(items);",
									"console.log(\"ITEMSSS\")",
									"if(items && items.plugins){",
									"//const players = JSON.parse(pm.environment.get(\"players\"));",
									"const plToReplace = {",
									"    \"plugins\":[",
									"        {",
									"        \"name\":\"ima3\",",
									"        \"change\":{",
									"        \"name\":\"newima3\",",
									"        \"scripts\":[",
									"            \"//players.brightcove.net/videojs-ima3/4.2.4/newvideojs-ima3.js\"",
									"        ],",
									"        }",
									"        }",
									"",
									"    ]",
									"}",
									"",
									"const plugins = items.plugins;",
									"let newPlugins = {",
									"    ",
									"    \"plugins\":[]",
									"}",
									"if(plugins){",
									"for(var i = 0; i<plugins.length; i++){",
									"    newPlugins[i] = plugins[i]",
									"    for(var j = 0; j<plToReplace.plugins.length; j++){",
									"",
									"    if(plugins[i].name && plugins[i].name == plToReplace.plugins[j].name){",
									"        let keysPl = Object.keys(plToReplace.plugins[j].change);",
									"        for(var h = 0; h<keysPl.length; h++){",
									"            if(plugins[i][keysPl[h]]){",
									"                plugins[i][keysPl[h]] = plToReplace.plugins[j].change[keysPl[h]]",
									"            }",
									"        }",
									"    }",
									"    }",
									"}",
									"pm.environment.set(\"configToUpdate\", JSON.stringify(newPlugins));",
									"console.log(\"NEW CONF\");",
									"console.log(newPlugins);",
									"postman.setNextRequest(\"update_config\");",
									"",
									"",
									"} else {",
									"let players = JSON.parse(pm.variables.get(\"players\"))",
									"console.log(players);",
									"console.log(\"PLAYEREEEEEEEE\");",
									"let currentPlayer = players.items.shift();",
									"console.log(currentPlayer.id);",
									"pm.variables.set(\"currentPlayerId\", currentPlayer.id);",
									"pm.variables.set(\"players\", JSON.stringify(players))",
									"postman.setNextRequest(\"get_updated_config_for_player\");",
									"",
									"}",
									"} else {",
									"",
									"    //postman.setNextRequest(\"list_of_player\");",
									"    let players = JSON.parse(pm.variables.get(\"players\"))",
									"console.log(players);",
									"console.log(\"PLAYEREEEEEEEE\");",
									"let currentPlayer = players.items.shift();",
									"console.log(currentPlayer.id);",
									"pm.variables.set(\"currentPlayerId\", currentPlayer.id);",
									"pm.variables.set(\"players\", JSON.stringify(players))",
									"postman.setNextRequest(\"get_updated_config_for_player\");",
									"",
									"",
									"}",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenName",
									"value": "brightcovetoken",
									"type": "string"
								},
								{
									"key": "tokenType",
									"value": "Bearer",
									"type": "string"
								},
								{
									"key": "client_authentication",
									"value": "header",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "string"
								},
								{
									"key": "clientSecret",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "clientId",
									"value": "{{client_id}}",
									"type": "string"
								},
								{
									"key": "accessTokenUrl",
									"value": "{{access_token_url}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountId}}/players/{{currentPlayerId}}/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}",
								"players",
								"{{currentPlayerId}}",
								"configuration"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "tokenType",
						"value": "Bearer",
						"type": "string"
					},
					{
						"key": "accessToken",
						"value": "ACBR6mpz0JiEYKb6hYfdLrwFgRBo-HAG5aRU9If0qGzJVplLggLBplwjNSJY1UTr7xLF2k1yyGbDCTHZ_RO85_KODQubIJQwcVlLkP3wa73Y_WPaEpSNHubPmu59w22Qm-B5KxNGZG0eBxz1VbGmgxYB-MYTJCRedHN0C1B8YVIIjoAtYD-zo9uxsj1VdXE5fG-75XClRmUihovAl7yXmT9nB6CtBmLrM3OMUZTgGK9k0cP1SMRcTdWFh_UFokOia6TN0WStOzA7uijzxBra4C6xV5Zw2Mhc3onf8OUVTlIM_L81hZg25sopdHcKwVNe9LasUjJjvES6PXgHXVE1j51LSYKnANRTRZVCJEomVUyuzKLsMCoopLen7pWxM1Jk6GVSaoRLzRyaHYUro5B_ASNt-AmrTdu7nUII8f98zfNjkxx69goa_SiSUUDf3LjF71EQqOuMYjkwfNdGYTRE6VtaBMCQgZlSbo0sR4SKFCzrU7bp_aQKKwg0X-_jHrnSvPjSS46tpz09MCB85GE15-2ecHK3hRy7gcQLuBSpN0cZUveUpe6UV9ymnSFCxibheB0vHwFG0pVL1oAsRB9ivPq1zHKAzRI952mwT8JKFlEeaHZX6zc0hwV9znicVUX9sPFIJ8gzKDSl-3sOqqos6JIhCzkO3xjlKz7BNCcxAmDCjXlvvbkWItzAHC1ZoJVtzQaAX5Qb3RdJc0suy3PV-ITJq78gmmit_8a5rhS4iE_0ewR-vHeyNjNztOxRmnjC4bLSDFueDwevuOadTDt96-NBSzqdsGTz4L9HmFrCdTSt1UwRaBU25YuXcK4cZkGlk0xa1Ih0-0tiiNyE_Or4yuAuKnfCU6yTSAy1TjDQKtb4FJ9qOH3xS066sW1M54olbssE_V8m5vA1iRfemBjOi01XdRCjDyic3VfMAddv5j4LeqX_a7UcW5fb9RI_etdYD2Wk1dXL91O6dYN4-maUuX8082kjRmaxw-RZQxbOpBitS1qOAtUdTBb7cPEnrcrfBAER4wc0JP9Q_un6f6DH9Ncxcnas4_2CyHfnjYeCVVhJr1iikwSltNY3bqvcKA0U0TyAsSdwg8xqnFeKdtFgk5wf68zJJlhjciV_sgvuhhXoT-RrP40zrmn2vcyqVWxF0_d2hPwHDsJW9rwXua40-tPB18tboZcKvw",
						"type": "string"
					},
					{
						"key": "tokenName",
						"value": "testtok",
						"type": "string"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "client_credentials",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "{{client_secret}}",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "{{client_id}}",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "{{access_token_url}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//controllo se ci sono array di account e se la lista di player è vuota. se si, prendo il primo id",
							"//e lo setto ",
							"/*",
							"let accountsList = JSON.parse(pm.environment.get('accountListIds'))",
							"let players = JSON.parse(pm.environment.get(\"players\"));",
							"console.log(\"ACCOUNT LIST LENG\"+accountsList.length+\" PLAYERS \"+players.items.length)",
							"if(accountsList.length > 0 && players && players.items && players.items.length == 0){",
							"    currentId = accountsList.shift();",
							"    pm.environment.set(\"accountId\",currentId);",
							"    pm.environment.set(\"accountListIds\",JSON.stringify(accountsList)); ",
							"    ",
							"",
							"}*/",
							"",
							"var now = new Date();",
							"var expiryTime = ",
							"    !!pm.variables.get(\"brightcovetoken_expirytime\")",
							"    ? Date.parse(pm.variables.get(\"brightcovetoken_expirytime\"))",
							"    : now;",
							"var difference = Math.floor((now - expiryTime) / 1000);",
							"if (difference > -30) { // if within 30 seconds of expiring",
							"    console.log(\"Old token expired, requesting new one...\");",
							"      console.log(pm.globals.get(\"brightcovetoken\"))",
							"    pm.sendRequest({",
							"        url: pm.variables.get(\"access_token_url\"),",
							"        method: \"POST\",",
							"        header: {",
							"            \"Accept\": \"application/json\",",
							"            \"Content-Type\": \"application/x-www-form-urlencoded\"",
							"        },",
							"        body: {",
							"            mode: \"urlencoded\",",
							"            urlencoded: [",
							"                { key: \"client_id\", value: pm.variables.get(\"client_id\"), disabled: false },",
							"                            { key: \"grant_type\", value: 'client_credentials', disabled: false },",
							"",
							"                { key: \"client_secret\", value: pm.variables.get(\"client_secret\"), disabled: false }",
							"            ]",
							"        }",
							"    }, (error, response) => {",
							"        if (error) {",
							"     ",
							"            console.log(error);",
							"        } else if (response) {",
							"            // set new token",
							"            pm.variables.set(\"brightcovetoken\", response.json().access_token);",
							"           ",
							"            // set new expiry time",
							"            pm.variables.set(\"brightcovetoken_expirytime\", new Date().addSeconds(response.json().expires_in));",
							"        }",
							"    });",
							"}",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"console.log('FINITO')"
						]
					}
				}
			]
		},
		{
			"name": "v1/player_update",
			"item": [
				{
					"name": "list_of_player",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"if(pm.environment.get(\"accountListIds\")){",
									"",
									"let accountList = JSON.parse(pm.environment.get(\"accountListIds\"));",
									"if(accountList.length > 0){",
									"let accountId = accountList[0];",
									"console.log(\"REMAINING \")",
									"console.log(accountList)",
									"console.log(\"ACCOUNT ID\")",
									"console.log(accountId)",
									"",
									"pm.environment.set('accountId',accountId);",
									"}",
									"}",
									"/*if(accountsList.length > 0 && players && players.items && players.items.length == 0){",
									"    currentId = accountsList.shift();",
									"    pm.environment.set(\"accountId\",currentId);",
									"    pm.environment.set(\"accountListIds\",JSON.stringify(accountsList)); ",
									"",
									"} else if(accountsList.length == 0 && players && players.items && players.items.length == 0){",
									"    currentId = \"0\"",
									"    pm.environment.set(\"accountId\",currentId);",
									"    ",
									"",
									"}*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"    let newItems = [];",
									"    let accountList = JSON.parse(pm.environment.get(\"accountListIds\"));",
									"if(pm.environment.get(\"playersListForUpdate\"))",
									"     newItems = JSON.parse(pm.environment.get(\"playersListForUpdate\"));",
									"console.log(\"account list length \"+accountList.length)",
									"if(accountList.length > 0){",
									"accountList.shift();",
									"pm.environment.set(\"accountListIds\", JSON.stringify(accountList))",
									"",
									"let items = pm.response.json();",
									"        //[\"5736494071001\",\"4626510591001\"]",
									"",
									"let playerNameToFind = pm.environment.get('playerToFind')",
									"console.log(playerNameToFind);",
									" for(var i = 0; i<items.items.length; i++){",
									"    if(items.items[i].name.toLowerCase().indexOf(playerNameToFind) >= 0){",
									"",
									"        items.items[i].accountId = pm.variables.get('accountId');",
									"",
									"        newItems.push(items.items[i]);",
									"",
									"    }",
									" }",
									"",
									"     //newItems.items = items.items;",
									"console.log(newItems)",
									"pm.environment.set(\"playersListForUpdate\", JSON.stringify(newItems));",
									"//const remainingAccountListIds = pm.environment.set(\"accountListIds\");",
									"        console.log(\"GET LIST OF PLAYER\");",
									"",
									"postman.setNextRequest(\"list_of_player\");",
									"} else {",
									"    pm.environment.set(\"accountId\", newItems[0].accountId);",
									"    pm.environment.set(\"currentPlayerId\",newItems[0].id);",
									"    console.log(\"GET UPDATE CONFIG FOR PLAYER\");",
									"postman.setNextRequest(\"get_updated_config_for_player\");",
									"}",
									"/*",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});*/",
									"",
									" ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "grant_type",
								"value": "client_credentials",
								"type": "text"
							},
							{
								"key": "client_id",
								"value": "{{client_id}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://players.api.brightcove.com/v2/accounts/{{accountId}}/players",
							"protocol": "https",
							"host": [
								"players",
								"api",
								"brightcove",
								"com"
							],
							"path": [
								"v2",
								"accounts",
								"{{accountId}}",
								"players"
							],
							"query": [
								{
									"key": "client_id",
									"value": "843a66f0-b33e-44c1-9015-4848ff46bb36",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update_config",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let config = JSON.parse(pm.variables.get('configToUpdate'));",
									"let version = pm.variables.get('newVersionForUpdate');",
									"console.log(\"VERSION\"+version);",
									"if(version)",
									"config.player.template.version = version;",
									"console.log(config);",
									"/*let body = {",
									"    mode: 'raw',",
									"    raw: JSON.stringify(config),",
									"    options: {",
									"        raw: {",
									"            language: 'json'",
									"        }",
									"    }",
									"}*/",
									"",
									"pm.environment.set('bodyData', JSON.stringify(config));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const players = JSON.parse(pm.variables.get(\"players\"));",
									"/*if(players && players.items.length == 0) {",
									"    let accountsList = JSON.parse(pm.environment.get('accountListIds'))",
									"",
									"    if(accountsList.length > 0){",
									"    ",
									"        postman.setNextRequest(\"list_of_player\");",
									"",
									"    }",
									"",
									"}*/",
									"console.log(\"FINE PATCH\")",
									"console.log(players);",
									"console.log(players.items.length);",
									"let currentPlayer = players.items.shift();",
									"console.log(currentPlayer.id);",
									"pm.variables.set(\"currentPlayerId\", currentPlayer.id);",
									"pm.variables.set(\"players\", JSON.stringify(players))",
									"if (players && players.items.length == 0) {",
									"",
									"",
									"    postman.setNextRequest(\"get_update_config_for_player\");",
									"}",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{bodyData}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountId}}/players/{{currentPlayerId}}/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}",
								"players",
								"{{currentPlayerId}}",
								"configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_updated_config_for_player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"const items = pm.response.json();",
									"console.log(\"CONFIG OTTENUTE\");",
									"console.log(JSON.stringify(items));",
									"if(pm.variables.get(\"currentPlayerId\") !== \"undefined\"){",
									"//const players = JSON.parse(pm.environment.get(\"players\"));",
									"console.log(\"CONFIGURATION TO UPDATE NO PARSE\")",
									"console.log(pm.environment.get(\"configurationToUpdate\"));",
									"const plToReplace = JSON.parse(pm.environment.get(\"configurationToUpdate\"))",
									"console.log(\"CONFIGURATION TO UPDATE  PARSE\")",
									"",
									"console.log(plToReplace);",
									"const plugins = items.plugins;",
									"let newPlugins = {",
									"    ",
									"    \"plugins\":[]",
									"}",
									"",
									"for(var i = 0; i<plugins.length; i++){",
									"    newPlugins[i] = plugins[i]",
									"    for(var j = 0; j<plToReplace.plugins.length; j++){",
									"",
									"    if(plugins[i].name && plugins[i].name == plToReplace.plugins[j].name){",
									"        let keysPl = Object.keys(plToReplace.plugins[j].change);",
									"        for(var h = 0; h<keysPl.length; h++){",
									"            if(plugins[i][keysPl[h]]){",
									"                plugins[i][keysPl[h]] = plToReplace.plugins[j].change[keysPl[h]]",
									"            }",
									"        }",
									"    }",
									"    }",
									"}",
									"items.plugins = newPlugins",
									"pm.variables.set(\"configToUpdate\", JSON.stringify(items));",
									"postman.setNextRequest(\"update_config\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountId}}/players/{{currentPlayerId}}/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountId}}",
								"players",
								"{{currentPlayerId}}",
								"configuration"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//controllo se ci sono array di account e se la lista di player è vuota. se si, prendo il primo id",
							"//e lo setto ",
							"/*",
							"let accountsList = JSON.parse(pm.environment.get('accountListIds'))",
							"let players = JSON.parse(pm.environment.get(\"players\"));",
							"console.log(\"ACCOUNT LIST LENG\"+accountsList.length+\" PLAYERS \"+players.items.length)",
							"if(accountsList.length > 0 && players && players.items && players.items.length == 0){",
							"    currentId = accountsList.shift();",
							"    pm.environment.set(\"accountId\",currentId);",
							"    pm.environment.set(\"accountListIds\",JSON.stringify(accountsList)); ",
							"    ",
							"",
							"}*/",
							"",
							"var now = new Date();",
							"var expiryTime = ",
							"    !!pm.variables.get(\"brightcovetoken_expirytime\")",
							"    ? Date.parse(pm.variables.get(\"brightcovetoken_expirytime\"))",
							"    : now;",
							"var difference = Math.floor((now - expiryTime) / 1000);",
							"if (difference > -30) { // if within 30 seconds of expiring",
							"    console.log(\"Old token expired, requesting new one...\");",
							"      console.log(pm.globals.get(\"brightcovetoken\"))",
							"    pm.sendRequest({",
							"        url: pm.variables.get(\"access_token_url\"),",
							"        method: \"POST\",",
							"        header: {",
							"            \"Accept\": \"application/json\",",
							"            \"Content-Type\": \"application/x-www-form-urlencoded\"",
							"        },",
							"        body: {",
							"            mode: \"urlencoded\",",
							"            urlencoded: [",
							"                { key: \"client_id\", value: pm.variables.get(\"client_id\"), disabled: false },",
							"                            { key: \"grant_type\", value: 'client_credentials', disabled: false },",
							"",
							"                { key: \"client_secret\", value: pm.variables.get(\"client_secret\"), disabled: false }",
							"            ]",
							"        }",
							"    }, (error, response) => {",
							"        if (error) {",
							"     ",
							"            console.log(error);",
							"        } else if (response) {",
							"            // set new token",
							"            pm.variables.set(\"brightcovetoken\", response.json().access_token);",
							"           ",
							"            // set new expiry time",
							"            pm.variables.set(\"brightcovetoken_expirytime\", new Date().addSeconds(response.json().expires_in));",
							"        }",
							"    });",
							"}",
							"",
							"",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "v1/player_clone",
			"item": [
				{
					"name": "get_player_name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const result = pm.response.json();",
									"const name_and_descr = {",
									"    name:result.name,",
									"    description:result.description",
									"}",
									"pm.variables.set('current_name_and_description', JSON.stringify(name_and_descr));",
									"",
									"//postman.setNextRequest(\"get_player_config\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountIdFrom}}/players/{{currentPlayerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountIdFrom}}",
								"players",
								"{{currentPlayerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_player_config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let result = pm.response.json();",
									"delete result[\"video_cloud\"];",
									"console.log(\"RESULT CONFIG\");",
									"console.log(result);",
									"pm.variables.set(\"player_to_clone\", JSON.stringify(result));",
									"//postman.setNextRequest(\"clone_player\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountIdFrom}}/players/{{currentPlayerId}}/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountIdFrom}}",
								"players",
								"{{currentPlayerId}}",
								"configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "clone_player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"RESULT\");",
									"var result = pm.response.json();",
									"pm.variables.set('currentPlayerId', result.id);",
									"//postman.setNextRequest(\"update_config_player\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const player_to_clone = pm.variables.get(\"player_to_clone\");",
									"console.log(player_to_clone);",
									"let body = {",
									"    mode: 'raw',",
									"    raw: JSON.stringify(player_to_clone),",
									"    options: {",
									"        raw: {",
									"            language: 'json'",
									"        }",
									"    }",
									"}",
									"console.log(\"PLAYER TO CLONE\");",
									"console.log(player_to_clone);",
									"pm.variables.set('bodyData', JSON.stringify(body));",
									"pm.variables.set('configToUpdate', JSON.stringify(body));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountIdTo}}/players",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountIdTo}}",
								"players"
							]
						}
					},
					"response": []
				},
				{
					"name": "update_config_player",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let config = JSON.parse(pm.variables.get('player_to_clone'));",
									"delete config[\"video_cloud\"];",
									"/*let newConfig = {",
									"    plugins: config.plugins,",
									"    css: config.css,",
									"    dock:config.dock,",
									"    compatibility:config.compatibility,",
									"    preload:config.preload,",
									"    autoplay:config.autoplay",
									"}",
									"/*let body = {",
									"    mode: 'raw',",
									"    raw: newConfig,",
									"    options: {",
									"        raw: {",
									"            language: 'json'",
									"        }",
									"    }",
									"}*/",
									"console.log(\"PATCH\");",
									"console.log(config);",
									"pm.variables.set('bodyData', JSON.stringify(config));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"RESULT PATCH\");",
									"var result = pm.response.json();",
									"console.log(result);",
									"//postman.setNextRequest(\"publish_player\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{bodyData}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountIdTo}}/players/{{currentPlayerId}}/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountIdTo}}",
								"players",
								"{{currentPlayerId}}",
								"configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "publish_player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//postman.setNextRequest(\"rename_player\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://players.api.brightcove.com/v2/accounts/{{accountIdTo}}/players/{{currentPlayerId}}/publish",
							"protocol": "https",
							"host": [
								"players",
								"api",
								"brightcove",
								"com"
							],
							"path": [
								"v2",
								"accounts",
								"{{accountIdTo}}",
								"players",
								"{{currentPlayerId}}",
								"publish"
							]
						}
					},
					"response": []
				},
				{
					"name": "rename_player",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//throw new Error('Finished');",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let nameAndDescr = JSON.parse(pm.variables.get('current_name_and_description'));",
									"console.log(\"nameAndDescr\")",
									"",
									"console.log(nameAndDescr)",
									"pm.variables.set('bodyNameDescrData', JSON.stringify(nameAndDescr));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{bodyNameDescrData}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts/{{accountIdTo}}/players/{{currentPlayerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts",
								"{{accountIdTo}}",
								"players",
								"{{currentPlayerId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "tokenType",
						"value": "Bearer",
						"type": "string"
					},
					{
						"key": "accessToken",
						"value": "AB0x-CQsMr2xNaC5Edwu3bT7VfjYeRvi65WkPT6gasyTMEF01sSC-UEc9037OCOfD9fiDtm--An_ZOwide_i9ua-9SnG4J_H1ys-Uxki2fuuGGRD9YAvEOA5xF78yb1DCV6p9qF-Sde-EMzWoDpRreKHwcWYcZhn0n3JHLnz3IQ-66eYqfnz1IW56mvnvaXIHfK_lHkSUGC_1Enf8iHtGpwdpmQns8lAuBCX0aRDXP3_gXUmik1YGlN46BkFrrnrofpKLTCaLe7Flud-_xFRLMRWWBAzQA5Gki5E8iogva7WA2J4SXItpZW747WsP4g8rHjUx5kfvmO-jwfrLOgfWJrUOdcxAktW_pAismlJUWUfbTvnVt0pC5Tb6A6WSNK0ob4bffRXDZ_DnL6N1hEIRdg8nAImq-SVpKJv117CwXh3yhsoZZ6_oLLZgl_I2EpCvZ_KS2d2-1xiu6RvDunj5DPZcP_ctQZ8QXNB2_NInl3aW4x-yQh4rt4TCV6nm9tSRkRRN7HLeDOHHkikyzy3JDX9d-bPBtZASjwGPV8JDzEpHv6AqHkCiySpmo11M6YMyiwMwoD82UT3jXc0WlMsOAX2qxHBr--EwnNKfywRmgQcO9D8ZVVdxkeS0JgU2eb2EdnHEaGX4nGbXvmTQQ0z-4rQzhgMRfkeZvVLwMPwmhs0ijcKvZNwRBJCcv3ir9tC44SLD1Sxf7j45TkCGMWOhXZOwyoALtFniou9X0nHQHsa23mJECoZtlAa7Vrellh7q1FTg1GRh7pZHcZiiGT_iDpoO9MacaFc84BCSotN4dzt4gvSRmY-f389sO6U_BNXTpcymoz2yxGA0Tq9noDUMgbhpmMxzJhFcd2Wd12HoRMwFcEGjzg4g-6Bi3NmyGLvFrs3T4dgP9yS5kJ3_wEzPCLovsemDvOR5k0ihBRlGUCaExKhZ53pvUmp_KQvO-am9VwT0433EkORsyQMv1HJ_gZ76fhlxHHFCYviprq37ZBgo3Dc18euhve4ohfwsHomcbMBz5i0JaPjIbx0hQl_Erc5gqVY3HhdudFanKaqLnB2uroEg3QL1pqvMXx7eqtp3jwDiFNiSYMbFDXgS77GUyJKyHCmEfVoK2iqQxbAkrFbkJm9fcYgZo5xIjo_OxmTcYi-yorNweCZZmxaQIoCnlWvDWjvKOByfvKhxwN0Oz563OirT7LMFe0",
						"type": "string"
					},
					{
						"key": "tokenName",
						"value": "brightcovetoken",
						"type": "string"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "client_credentials",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "{{client_secret}}",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "{{client_id}}",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "{{access_token_url}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//controllo se ci sono array di account e se la lista di player è vuota. se si, prendo il primo id",
							"//e lo setto ",
							"/*",
							"let accountsList = JSON.parse(pm.environment.get('accountListIds'))",
							"let players = JSON.parse(pm.environment.get(\"players\"));",
							"console.log(\"ACCOUNT LIST LENG\"+accountsList.length+\" PLAYERS \"+players.items.length)",
							"if(accountsList.length > 0 && players && players.items && players.items.length == 0){",
							"    currentId = accountsList.shift();",
							"    pm.environment.set(\"accountId\",currentId);",
							"    pm.environment.set(\"accountListIds\",JSON.stringify(accountsList)); ",
							"    ",
							"",
							"}*/",
							"",
							"var now = new Date();",
							"var expiryTime = ",
							"    !!pm.variables.get(\"brightcovetoken_expirytime\")",
							"    ? Date.parse(pm.variables.get(\"brightcovetoken_expirytime\"))",
							"    : now;",
							"var difference = Math.floor((now - expiryTime) / 1000);",
							"if (difference > -30) { // if within 30 seconds of expiring",
							"    console.log(\"Old token expired, requesting new one...\");",
							"      console.log(pm.globals.get(\"brightcovetoken\"))",
							"    pm.sendRequest({",
							"        url: pm.variables.get(\"access_token_url\"),",
							"        method: \"POST\",",
							"        header: {",
							"            \"Accept\": \"application/json\",",
							"            \"Content-Type\": \"application/x-www-form-urlencoded\"",
							"        },",
							"        body: {",
							"            mode: \"urlencoded\",",
							"            urlencoded: [",
							"                { key: \"client_id\", value: pm.variables.get(\"client_id\"), disabled: false },",
							"                            { key: \"grant_type\", value: 'client_credentials', disabled: false },",
							"",
							"                { key: \"client_secret\", value: pm.variables.get(\"client_secret\"), disabled: false }",
							"            ]",
							"        }",
							"    }, (error, response) => {",
							"        if (error) {",
							"     ",
							"            console.log(error);",
							"        } else if (response) {",
							"            // set new token",
							"            pm.variables.set(\"brightcovetoken\", response.json().access_token);",
							"           ",
							"            // set new expiry time",
							"            pm.variables.set(\"brightcovetoken_expirytime\", new Date().addSeconds(response.json().expires_in));",
							"        }",
							"    });",
							"}",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//controllo se ci sono array di account e se la lista di player è vuota. se si, prendo il primo id",
					"//e lo setto ",
					"/*",
					"let accountsList = JSON.parse(pm.environment.get('accountListIds'))",
					"let players = JSON.parse(pm.environment.get(\"players\"));",
					"console.log(\"ACCOUNT LIST LENG\"+accountsList.length+\" PLAYERS \"+players.items.length)",
					"if(accountsList.length > 0 && players && players.items && players.items.length == 0){",
					"    currentId = accountsList.shift();",
					"    pm.environment.set(\"accountId\",currentId);",
					"    pm.environment.set(\"accountListIds\",JSON.stringify(accountsList)); ",
					"    ",
					"",
					"}*/",
					"",
					"var now = new Date();",
					"var expiryTime = ",
					"    !!pm.variables.get(\"brightcovetoken_expirytime\")",
					"    ? Date.parse(pm.variables.get(\"brightcovetoken_expirytime\"))",
					"    : now;",
					"var difference = Math.floor((now - expiryTime) / 1000);",
					"if (difference > -30) { // if within 30 seconds of expiring",
					"    console.log(\"Old token expired, requesting new one...\");",
					"      console.log(pm.globals.get(\"brightcovetoken\"))",
					"    pm.sendRequest({",
					"        url: pm.variables.get(\"access_token_url\"),",
					"        method: \"POST\",",
					"        header: {",
					"            \"Accept\": \"application/json\",",
					"            \"Content-Type\": \"application/x-www-form-urlencoded\"",
					"        },",
					"        body: {",
					"            mode: \"urlencoded\",",
					"            urlencoded: [",
					"                { key: \"client_id\", value: pm.variables.get(\"client_id\"), disabled: false },",
					"                            { key: \"grant_type\", value: 'client_credentials', disabled: false },",
					"",
					"                { key: \"client_secret\", value: pm.variables.get(\"client_secret\"), disabled: false }",
					"            ]",
					"        }",
					"    }, (error, response) => {",
					"        if (error) {",
					"     ",
					"            console.log(error);",
					"        } else if (response) {",
					"            // set new token",
					"            pm.variables.set(\"brightcovetoken\", response.json().access_token);",
					"           ",
					"            // set new expiry time",
					"            pm.variables.set(\"brightcovetoken_expirytime\", new Date().addSeconds(response.json().expires_in));",
					"        }",
					"    });",
					"}",
					"",
					"",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://cms.api.brightcove.com",
			"type": "string"
		}
	]
}